// <auto-generated />
using System;
using Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace Repositorio.Migrations
{
    [DbContext(typeof(PlataformaClienteContexto))]
    [Migration("20210209204800_RefactorProdutoEnum")]
    partial class RefactorProdutoEnum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.AnexoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ANEXO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipo")
                        .HasColumnName("ID_TIPO")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnName("LINK")
                        .HasColumnType("varchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdTipo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ANEXO");
                });

            modelBuilder.Entity("Dominio.BancoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_BANCO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnName("CNPJ")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("CODIGO")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("BANCO");
                });

            modelBuilder.Entity("Dominio.BaseCepDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_BASE_CEP")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnName("BAIRRO")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnName("CEP")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLogradouro")
                        .HasColumnType("int");

                    b.Property<int>("IdUnidadeFederativa")
                        .HasColumnType("int");

                    b.Property<string>("InformacaoAdicional")
                        .HasColumnName("INFORMACAO_ADICIONAL")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnName("LOGRADOURO")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("PermiteAjusteLogradouro")
                        .HasColumnName("PERMITE_AJUSTE_LOGRADOURO")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("CEP")
                        .IsUnique();

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdTipoLogradouro");

                    b.HasIndex("IdUnidadeFederativa");

                    b.ToTable("BASE_CEP");
                });

            modelBuilder.Entity("Dominio.ClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CLIENTE")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataImportacao")
                        .HasColumnName("DATA_IMPORTACAO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnName("DATA_NASCIMENTO")
                        .HasColumnType("date");

                    b.Property<bool?>("DeficienteVisual")
                        .HasColumnName("DEFICIENTE_VISUAL")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Filiacao1")
                        .HasColumnName("FILIACAO1")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Filiacao2")
                        .HasColumnName("FILIACAO2")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("IdCidadeNatal")
                        .HasColumnName("ID_CIDADE_NATAL")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstadoCivil")
                        .HasColumnName("ID_ESTADO_CIVIL")
                        .HasColumnType("int");

                    b.Property<int?>("IdGenero")
                        .HasColumnName("ID_GENERO")
                        .HasColumnType("int");

                    b.Property<int?>("IdGrauInstrucao")
                        .HasColumnName("ID_GRAU_INSTRUCAO")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdCidadeNatal");

                    b.HasIndex("IdEstadoCivil");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdGrauInstrucao");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("CLIENTE");
                });

            modelBuilder.Entity("Dominio.ConvenioDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnName("ID_CONVENIO")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("CODIGO")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("CONVENIO");
                });

            modelBuilder.Entity("Dominio.ConvenioOrgaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CONVENIO_ORGAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnName("CNPJ")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("CODIGO")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdConvenio")
                        .HasColumnName("ID_CONVENIO")
                        .HasColumnType("int");

                    b.Property<int?>("IdUnidadeFederativa")
                        .HasColumnName("ID_UNIDADE_FEDERATIVA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdUnidadeFederativa");

                    b.ToTable("CONVENIO_ORGAO");
                });

            modelBuilder.Entity("Dominio.DocumentoIdentificacaoClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_DOCUMENTO_IDENTIFICACAO_CLIENTE")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnName("DATA_EMISSAO")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnName("DELETADO")
                        .HasColumnType("bit");

                    b.Property<int>("IdCliente")
                        .HasColumnName("ID_CLIENTE")
                        .HasColumnType("int");

                    b.Property<int>("IdOrgaoEmissor")
                        .HasColumnName("ID_ORGAO_EMISSOR")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDocumento")
                        .HasColumnName("ID_TIPO_DOCUMENTO")
                        .HasColumnType("int");

                    b.Property<int>("IdUnidadeFederativa")
                        .HasColumnName("ID_UNIDADE_FEDERATIVA")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnName("NUMERO")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdOrgaoEmissor");

                    b.HasIndex("IdTipoDocumento");

                    b.HasIndex("IdUnidadeFederativa");

                    b.HasIndex("Numero", "IdTipoDocumento", "IdUnidadeFederativa")
                        .IsUnique()
                        .HasFilter("[NUMERO] IS NOT NULL");

                    b.ToTable("DOCUMENTO_IDENTIFICACAO_CLIENTE");
                });

            modelBuilder.Entity("Dominio.EnderecoClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ENDERECO_CLIENTE")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnName("BAIRRO")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Cep")
                        .HasColumnName("CEP")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Complemento")
                        .HasColumnName("COMPLEMENTO")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnName("DELETADO")
                        .HasColumnType("bit");

                    b.Property<int>("IdCliente")
                        .HasColumnName("ID_CLIENTE")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipio")
                        .HasColumnName("ID_MUNICIPIO")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLogradouro")
                        .HasColumnName("ID_TIPO_LOGRADOURO")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .HasColumnName("LOGRADOURO")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("Numero")
                        .HasColumnName("NUMERO")
                        .HasColumnType("int");

                    b.Property<bool>("Principal")
                        .HasColumnName("PRINCIPAL")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasColumnName("TITULO")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdTipoLogradouro");

                    b.ToTable("ENDERECO_CLIENTE");
                });

            modelBuilder.Entity("Dominio.EstadoCivilDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ESTADO_CIVIL")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("SIGLA")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("ESTADO_CIVIL");
                });

            modelBuilder.Entity("Dominio.GeneroDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_GENERO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("SIGLA")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("GENERO");
                });

            modelBuilder.Entity("Dominio.GrauInstrucaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_GRAU_INSTRUCAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("GRAU_INSTRUCAO");
                });

            modelBuilder.Entity("Dominio.InssEspecieBeneficioDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_INSS_ESPECIE_BENEFICIO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("CODIGO")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("INSS_ESPECIE_BENEFICIO");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_INTENCAO_OPERACAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdLead")
                        .HasColumnName("ID_LEAD")
                        .HasColumnType("int");

                    b.Property<int?>("IdLoja")
                        .HasColumnName("ID_LOJA")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnName("ID_PRODUTO")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoOperacao")
                        .HasColumnName("ID_TIPO_OPERACAO")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("int");

                    b.Property<decimal>("Prestacao")
                        .HasColumnName("PRESTACAO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxaAno")
                        .HasColumnName("TAXA_ANO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxaMes")
                        .HasColumnName("TAXA_MES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal>("ValorAuxilioFinanceiro")
                        .HasColumnName("VALOR_AUXILIO_FINANCEIRO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorFinanciado")
                        .HasColumnName("VALOR_FINANCIADO")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("IdLead");

                    b.HasIndex("IdLoja");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdTipoOperacao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("INTENCAO_OPERACAO");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoHistoricoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_INTENCAO_OPERACAO_HISTORICO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoEspecifica")
                        .HasColumnName("DESCRICAO_ESPECIFICA")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("IdIntencaoOperacao")
                        .HasColumnName("ID_INTENCAO_OPERACAO")
                        .HasColumnType("int");

                    b.Property<int>("IdSituacaoIntencaoOperacao")
                        .HasColumnName("ID_SITUACAO_INTENCAO_OPERACAO")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdIntencaoOperacao");

                    b.HasIndex("IdSituacaoIntencaoOperacao");

                    b.ToTable("INTENCAO_OPERACAO_HISTORICO");
                });

            modelBuilder.Entity("Dominio.LeadDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_LEAD")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DesejaContatoWhatsApp")
                        .HasColumnName("DESEJA_CONTATO_WHATSAPP")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("IdConvenio")
                        .HasColumnName("ID_CONVENIO")
                        .HasColumnType("int");

                    b.Property<int?>("IdLoja")
                        .HasColumnName("ID_LOJA")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduto")
                        .HasColumnName("ID_PRODUTO")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnName("LATITUDE")
                        .HasColumnType("float")
                        .HasMaxLength(10);

                    b.Property<string>("LinkContatoWhatsAppLoja")
                        .HasColumnName("LINK_CONTATO_WHATSAPP_LOJA")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<double>("Longitude")
                        .HasColumnName("LONGITUDE")
                        .HasColumnType("float")
                        .HasMaxLength(10);

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("OrigemRequisicaoCampanha")
                        .HasColumnName("ORIGEM_REQUISICAO_CAMPANHA")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("OrigemRequisicaoConteudo")
                        .HasColumnName("ORIGEM_REQUISICAO_CONTEUDO")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("OrigemRequisicaoMidia")
                        .HasColumnName("ORIGEM_REQUISICAO_MIDIA")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("OrigemRequisicaoPalavraChave")
                        .HasColumnName("ORIGEM_REQUISICAO_PALAVRA_CHAVE")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("OrigemRequisicaoTermo")
                        .HasColumnName("ORIGEM_REQUISICAO_TERMO")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("Telefone")
                        .HasColumnName("TELEFONE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdLoja");

                    b.HasIndex("IdProduto");

                    b.ToTable("LEAD");
                });

            modelBuilder.Entity("Dominio.LojaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_LOJA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnName("BAIRRO")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Cep")
                        .HasColumnName("CEP")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Cidade")
                        .HasColumnName("CIDADE")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .HasColumnName("ENDERECO")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("ESTADO")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<Point>("Geolocalizacao")
                        .HasColumnName("GEOLOCALIZACAO")
                        .HasColumnType("geography");

                    b.Property<double>("Latitude")
                        .HasColumnName("LATITUDE")
                        .HasColumnType("float")
                        .HasMaxLength(10);

                    b.Property<double>("Longitude")
                        .HasColumnName("LONGITUDE")
                        .HasColumnType("float")
                        .HasMaxLength(10);

                    b.Property<string>("MensagemApresentacao")
                        .HasColumnName("MENSAGEM_APRESENTACAO")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("LOJA");
                });

            modelBuilder.Entity("Dominio.MunicipioDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_MUNICIPIO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("IdUnidadeFederativa")
                        .HasColumnName("ID_UNIDADE_FEDERATIVA")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdUnidadeFederativa");

                    b.ToTable("MUNICIPIO");
                });

            modelBuilder.Entity("Dominio.OrgaoEmissorIdentificacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ORGAO_EMISSOR_IDENTIFICACAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("CODIGO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("ORGAO_EMISSOR_IDENTIFICACAO");
                });

            modelBuilder.Entity("Dominio.ParametroOperacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PARAMETRO_OPERACAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdConvenio")
                        .HasColumnName("ID_CONVENIO")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoOperacao")
                        .HasColumnName("ID_TIPO_OPERACAO")
                        .HasColumnType("int");

                    b.Property<string>("InstituicaoFinanceira")
                        .HasColumnName("INSTITUICAO_FINANCEIRA")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("QuantidadeParcelas")
                        .HasColumnName("QUANTIDADE_PARCELAS")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TaxaPlano")
                        .HasColumnName("TAXA_PLANO")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("TentativaRetencao")
                        .HasColumnName("TENTATIVA_RETENCAO")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdTipoOperacao");

                    b.ToTable("PARAMETRO_OPERACAO");
                });

            modelBuilder.Entity("Dominio.ProdutoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnName("ID_PRODUTO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("RequerConvenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REQUER_CONVENIO")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("SIGLA")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("PRODUTO");
                });

            modelBuilder.Entity("Dominio.ProdutoIntencaoOperacaoPassoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PRODUTO_INTENCAO_OPERACAO_PASSO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProduto")
                        .HasColumnName("ID_PRODUTO")
                        .HasColumnType("int");

                    b.Property<int?>("IdProximoPasso")
                        .HasColumnName("ID_PROXIMO_PASSO")
                        .HasColumnType("int");

                    b.Property<int?>("IdProximoPassoExcecao")
                        .HasColumnName("ID_PROXIMO_PASSO_EXCECAO")
                        .HasColumnType("int");

                    b.Property<int>("IdSituacaoIntencaoOperacao")
                        .HasColumnName("ID_SITUACAO_INTENCAO_OPERACAO")
                        .HasColumnType("int");

                    b.Property<bool>("PassoInicial")
                        .HasColumnName("PASSO_INICIAL")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdProximoPasso");

                    b.HasIndex("IdProximoPassoExcecao");

                    b.HasIndex("IdSituacaoIntencaoOperacao");

                    b.HasIndex("IdProduto", "IdSituacaoIntencaoOperacao")
                        .IsUnique();

                    b.HasIndex("IdProduto", "PassoInicial")
                        .IsUnique()
                        .HasFilter("[PASSO_INICIAL] = 1");

                    b.ToTable("PRODUTO_INTENCAO_OPERACAO_PASSO");
                });

            modelBuilder.Entity("Dominio.RegistroEmailDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_REGISTRO_EMAIL")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destinatarios")
                        .IsRequired()
                        .HasColumnName("DESTINATARIOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Finalidade")
                        .HasColumnName("FINALIDADE")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("Finalidade");

                    b.HasIndex("IdUsuario");

                    b.ToTable("REGISTRO_EMAIL");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_RENDIMENTO_CLIENTE")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasColumnName("AGENCIA")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Conta")
                        .IsRequired()
                        .HasColumnName("CONTA")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<int>("IdBanco")
                        .HasColumnName("ID_BANCO")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnName("ID_CLIENTE")
                        .HasColumnType("int");

                    b.Property<int>("IdConvenio")
                        .HasColumnName("ID_CONVENIO")
                        .HasColumnType("int");

                    b.Property<int>("IdConvenioOrgao")
                        .HasColumnName("ID_CONVENIO_ORGAO")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoConta")
                        .HasColumnName("ID_TIPO_CONTA")
                        .HasColumnType("int");

                    b.Property<int>("IdUf")
                        .HasColumnName("ID_UF")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal>("ValorRendimento")
                        .HasColumnName("VALOR_RENDIMENTO")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdConvenioOrgao");

                    b.HasIndex("IdTipoConta");

                    b.HasIndex("IdUf");

                    b.ToTable("RENDIMENTO_CLIENTE");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteInssDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_RENDIMENTO_CLIENTE_INSS")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnName("DATA_INSCRICAO")
                        .HasColumnType("date");

                    b.Property<int>("IdInssEspecieBeneficio")
                        .HasColumnName("ID_INSS_ESPECIE_BENEFICIO")
                        .HasColumnType("int");

                    b.Property<int>("IdRendimentoCliente")
                        .HasColumnName("ID_RENDIMENTO_CLIENTE")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnName("MATRICULA")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdInssEspecieBeneficio");

                    b.HasIndex("IdRendimentoCliente")
                        .IsUnique();

                    b.ToTable("RENDIMENTO_CLIENTE_INSS");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteSiapeDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_RENDIMENTO_CLIENTE_SIAPE")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnName("DATA_ADMISSAO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRendimentoCliente")
                        .HasColumnName("ID_RENDIMENTO_CLIENTE")
                        .HasColumnType("int");

                    b.Property<int>("IdSiapeTipoFuncional")
                        .HasColumnName("ID_SIAPE_TIPO_FUNCIONAL")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnName("MATRICULA")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("MatriculaInstituidor")
                        .HasColumnName("MATRICULA_INSTITUIDOR")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("NomeInstituidor")
                        .HasColumnName("NOME_INSTITUIDOR")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<bool>("PossuiRepresentacaoPorProcurador")
                        .HasColumnName("POSSUI_REPRESENTACAO_POR_PROCURADOR")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdRendimentoCliente")
                        .IsUnique();

                    b.HasIndex("IdSiapeTipoFuncional");

                    b.ToTable("RENDIMENTO_CLIENTE_SIAPE");
                });

            modelBuilder.Entity("Dominio.SiapeTipoFuncionalDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_SIAPE_TIPO_FUNCIONAL")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("CODIGO")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("SIAPE_TIPO_FUNCIONAL");
                });

            modelBuilder.Entity("Dominio.SituacaoIntencaoOperacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_SITUACAO_INTENCAO_OPERACAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoPadrao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO_PADRAO")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("PermiteAtualizacoes")
                        .HasColumnName("PERMITE_ATUALIZACOES")
                        .HasColumnType("bit");

                    b.Property<bool>("PermiteSituacaoExtraordinaria")
                        .HasColumnName("PERMITE_SITUACAO_EXTRAORDINARIA")
                        .HasColumnType("bit");

                    b.Property<bool>("SituacaoExtraordinaria")
                        .HasColumnName("SITUACAO_EXTRAORDINARIA")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("SITUACAO_INTENCAO_OPERACAO");
                });

            modelBuilder.Entity("Dominio.TelefoneClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TELEFONE_CLIENTE")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasColumnName("DDD")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnName("DELETADO")
                        .HasColumnType("bit");

                    b.Property<string>("Fone")
                        .IsRequired()
                        .HasColumnName("FONE")
                        .HasColumnType("varchar(9)")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<int>("IdCliente")
                        .HasColumnName("ID_CLIENTE")
                        .HasColumnType("int");

                    b.Property<bool>("Principal")
                        .HasColumnName("PRINCIPAL")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.ToTable("TELEFONE_CLIENTE");
                });

            modelBuilder.Entity("Dominio.TelefoneLojaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TELEFONE_LOJA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLoja")
                        .HasColumnName("ID_LOJA")
                        .HasColumnType("int");

                    b.Property<string>("MensagemApresentacao")
                        .HasColumnName("MENSAGEM_APRESENTACAO")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<bool>("PossuiContaWhatsApp")
                        .HasColumnName("POSSUI_CONTA_WHATSAPP")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .HasColumnName("TELEFONE")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdLoja");

                    b.ToTable("TELEFONE_LOJA");
                });

            modelBuilder.Entity("Dominio.TemplateEmailDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TEMPLATE_EMAIL")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnName("CONTEUDO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("Finalidade")
                        .HasColumnName("FINALIDADE")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnName("TIPO")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("Finalidade");

                    b.HasIndex("Tipo", "Finalidade")
                        .IsUnique();

                    b.ToTable("TEMPLATE_EMAIL");
                });

            modelBuilder.Entity("Dominio.TemplateEmailFinalidadeDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnName("ID_TEMPLATE_EMAIL_FINALIDADE")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("TEMPLATE_EMAIL_FINALIDADE");
                });

            modelBuilder.Entity("Dominio.TemplateEmailTipoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnName("ID_TEMPLATE_EMAIL_TIPO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("TEMPLATE_EMAIL_TIPO");
                });

            modelBuilder.Entity("Dominio.TipoContaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TIPO_CONTA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("SIGLA")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("TIPO_CONTA");
                });

            modelBuilder.Entity("Dominio.TipoDocumentoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TIPO_DOCUMENTO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("CODIGO")
                        .HasColumnType("varchar(7)")
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("TIPO_DOCUMENTO");
                });

            modelBuilder.Entity("Dominio.TipoLogradouroDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TIPO_LOGRADOURO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("CODIGO")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("TIPO_LOGRADOURO");
                });

            modelBuilder.Entity("Dominio.TipoOperacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnName("ID_TIPO_OPERACAO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("SIGLA")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("TIPO_OPERACAO");
                });

            modelBuilder.Entity("Dominio.TipoVinculoInstitucionalDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TIPO_VINCULO_INSTITUCIONAL")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("TIPO_VINCULO_INSTITUCIONAL");
                });

            modelBuilder.Entity("Dominio.UnidadeFederativaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_UNIDADE_FEDERATIVA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("SIGLA")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("UNIDADE_FEDERATIVA");
                });

            modelBuilder.Entity("Dominio.UsuarioDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("IdLoja")
                        .HasColumnName("ID_LOJA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("SENHA")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.HasIndex("IdLoja");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("Dominio.UsuarioRecuperacaoSenhaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USUARIO_RECUPERACAO_SENHA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("DATA_ATUALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRequisicao")
                        .HasColumnName("DATA_REQUISICAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("TOKEN")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioAtualizacao")
                        .HasColumnName("USUARIO_ATUALIZACAO")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<bool>("Valido")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALIDO")
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ID");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("USUARIO_RECUPERACAO_SENHA");
                });

            modelBuilder.Entity("Dominio.AnexoDominio", b =>
                {
                    b.HasOne("Dominio.TipoDocumentoDominio", "Tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany("Anexos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.BaseCepDominio", b =>
                {
                    b.HasOne("Dominio.MunicipioDominio", "Municipio")
                        .WithMany()
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoLogradouroDominio", "TipoLogradouro")
                        .WithMany()
                        .HasForeignKey("IdTipoLogradouro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UnidadeFederativaDominio", "UF")
                        .WithMany()
                        .HasForeignKey("IdUnidadeFederativa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ClienteDominio", b =>
                {
                    b.HasOne("Dominio.MunicipioDominio", "CidadeNatal")
                        .WithMany()
                        .HasForeignKey("IdCidadeNatal")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.EstadoCivilDominio", "EstadoCivil")
                        .WithMany()
                        .HasForeignKey("IdEstadoCivil")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.GeneroDominio", "Genero")
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.GrauInstrucaoDominio", "GrauInstrucao")
                        .WithMany()
                        .HasForeignKey("IdGrauInstrucao")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithOne("Cliente")
                        .HasForeignKey("Dominio.ClienteDominio", "IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ConvenioOrgaoDominio", b =>
                {
                    b.HasOne("Dominio.ConvenioDominio", "Convenio")
                        .WithMany()
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UnidadeFederativaDominio", "UF")
                        .WithMany()
                        .HasForeignKey("IdUnidadeFederativa")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Dominio.DocumentoIdentificacaoClienteDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("DocumentosIdentificacao")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.OrgaoEmissorIdentificacaoDominio", "OrgaoEmissor")
                        .WithMany()
                        .HasForeignKey("IdOrgaoEmissor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoDocumentoDominio", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UnidadeFederativaDominio", "Uf")
                        .WithMany()
                        .HasForeignKey("IdUnidadeFederativa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.EnderecoClienteDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.MunicipioDominio", "Municipio")
                        .WithMany()
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoLogradouroDominio", "TipoLogradouro")
                        .WithMany()
                        .HasForeignKey("IdTipoLogradouro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoDominio", b =>
                {
                    b.HasOne("Dominio.LeadDominio", "Lead")
                        .WithMany("IntencoesOperacao")
                        .HasForeignKey("IdLead")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.LojaDominio", "Loja")
                        .WithMany("IntencoesOperacao")
                        .HasForeignKey("IdLoja")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.ProdutoDominio", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoOperacaoDominio", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("IdTipoOperacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany("IntencoesOperacao")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoHistoricoDominio", b =>
                {
                    b.HasOne("Dominio.IntencaoOperacaoDominio", "IntencaoOperacao")
                        .WithMany("Historico")
                        .HasForeignKey("IdIntencaoOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.SituacaoIntencaoOperacaoDominio", "SituacaoIntencaoOperacao")
                        .WithMany()
                        .HasForeignKey("IdSituacaoIntencaoOperacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.LeadDominio", b =>
                {
                    b.HasOne("Dominio.ConvenioDominio", "Convenio")
                        .WithMany()
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.LojaDominio", "Loja")
                        .WithMany("Leads")
                        .HasForeignKey("IdLoja")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.ProdutoDominio", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Dominio.MunicipioDominio", b =>
                {
                    b.HasOne("Dominio.UnidadeFederativaDominio", "UF")
                        .WithMany()
                        .HasForeignKey("IdUnidadeFederativa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ParametroOperacaoDominio", b =>
                {
                    b.HasOne("Dominio.ConvenioDominio", "Convenio")
                        .WithMany()
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoOperacaoDominio", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("IdTipoOperacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.ProdutoIntencaoOperacaoPassoDominio", b =>
                {
                    b.HasOne("Dominio.ProdutoDominio", "Produto")
                        .WithMany("PassosIntencaoOperacao")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.ProdutoIntencaoOperacaoPassoDominio", "ProximoPasso")
                        .WithMany()
                        .HasForeignKey("IdProximoPasso")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.ProdutoIntencaoOperacaoPassoDominio", "ProximoPassoExcecao")
                        .WithMany()
                        .HasForeignKey("IdProximoPassoExcecao")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.SituacaoIntencaoOperacaoDominio", "SituacaoIntencaoOperacao")
                        .WithMany()
                        .HasForeignKey("IdSituacaoIntencaoOperacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.RegistroEmailDominio", b =>
                {
                    b.HasOne("Dominio.TemplateEmailFinalidadeDominio", "TemplateEmailFinalidade")
                        .WithMany()
                        .HasForeignKey("Finalidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteDominio", b =>
                {
                    b.HasOne("Dominio.BancoDominio", "Banco")
                        .WithMany()
                        .HasForeignKey("IdBanco")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("Rendimentos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.ConvenioDominio", "Convenio")
                        .WithMany()
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.ConvenioOrgaoDominio", "ConvenioOrgao")
                        .WithMany()
                        .HasForeignKey("IdConvenioOrgao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoContaDominio", "TipoConta")
                        .WithMany()
                        .HasForeignKey("IdTipoConta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UnidadeFederativaDominio", "Uf")
                        .WithMany()
                        .HasForeignKey("IdUf")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.RendimentoClienteInssDominio", b =>
                {
                    b.HasOne("Dominio.InssEspecieBeneficioDominio", "EspecieBeneficio")
                        .WithMany()
                        .HasForeignKey("IdInssEspecieBeneficio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.RendimentoClienteDominio", "Rendimento")
                        .WithOne("DadosInss")
                        .HasForeignKey("Dominio.RendimentoClienteInssDominio", "IdRendimentoCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.RendimentoClienteSiapeDominio", b =>
                {
                    b.HasOne("Dominio.RendimentoClienteDominio", "Rendimento")
                        .WithOne("DadosSiape")
                        .HasForeignKey("Dominio.RendimentoClienteSiapeDominio", "IdRendimentoCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.SiapeTipoFuncionalDominio", "TipoFuncional")
                        .WithMany()
                        .HasForeignKey("IdSiapeTipoFuncional")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.TelefoneClienteDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("Telefones")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.TelefoneLojaDominio", b =>
                {
                    b.HasOne("Dominio.LojaDominio", "Loja")
                        .WithMany("Telefones")
                        .HasForeignKey("IdLoja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.TemplateEmailDominio", b =>
                {
                    b.HasOne("Dominio.TemplateEmailFinalidadeDominio", "TemplateEmailFinalidade")
                        .WithMany()
                        .HasForeignKey("Finalidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TemplateEmailTipoDominio", "TemplateEmailTipo")
                        .WithMany()
                        .HasForeignKey("Tipo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.UsuarioDominio", b =>
                {
                    b.HasOne("Dominio.LojaDominio", "Loja")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdLoja")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Dominio.UsuarioRecuperacaoSenhaDominio", b =>
                {
                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
