// <auto-generated />
using System;
using Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace Repositorio.Migrations
{
    [DbContext(typeof(PlataformaClienteContexto))]
    [Migration("20220502165824_AddRendimentoClienteMarinhaEAeronautica")]
    partial class AddRendimentoClienteMarinhaEAeronautica
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.AeronauticaCargoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_AERONAUTICA_CARGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("AERONAUTICA_CARGO");
                });

            modelBuilder.Entity("Dominio.AeronauticaTipoFuncionalDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_AERONAUTICA_TIPO_FUNCIONAL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("AERONAUTICA_TIPO_FUNCIONAL");
                });

            modelBuilder.Entity("Dominio.AnexoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ANEXO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<string>("Extensao")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("EXTENSAO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int>("IdTipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_DOCUMENTO");

                    b.Property<string>("Link")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("LINK");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("ANEXO");
                });

            modelBuilder.Entity("Dominio.BancoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_BANCO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("NOME");

                    b.Property<bool>("PermitePortabilidade")
                        .HasColumnType("bit")
                        .HasColumnName("PERMITE_PORTABILIDADE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("BANCO");
                });

            modelBuilder.Entity("Dominio.BaseCepDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_BASE_CEP")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("CEP");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int")
                        .HasColumnName("ID_MUNICIPIO");

                    b.Property<int>("IdTipoLogradouro")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_LOGRADOURO");

                    b.Property<int>("IdUnidadeFederativa")
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDADE_FEDERATIVA");

                    b.Property<string>("InformacaoAdicional")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("INFORMACAO_ADICIONAL");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<bool>("PermiteAjusteLogradouro")
                        .HasColumnType("bit")
                        .HasColumnName("PERMITE_AJUSTE_LOGRADOURO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("CEP")
                        .IsUnique();

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdTipoLogradouro");

                    b.HasIndex("IdUnidadeFederativa");

                    b.ToTable("BASE_CEP");
                });

            modelBuilder.Entity("Dominio.BeneficioInssMensagemDeParaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_BENEFICIO_INSS_MENSAGEM_DE_PARA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoOriginal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CODIGO_ORIGINAL");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("MensagemOriginal")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("MENSAGEM_ORIGINAL");

                    b.Property<string>("MensagemTratada")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("MENSAGEM_TRATADA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("CodigoOriginal")
                        .IsUnique();

                    b.ToTable("BENEFICIO_INSS_MENSAGEM_DE_PARA");
                });

            modelBuilder.Entity("Dominio.BiometriaClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_BIOMETRIA_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ENVIO");

                    b.Property<DateTime>("DataRetorno")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_RETORNO");

                    b.Property<int>("IdBiometriaSituacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_BIOMETRIA_SITUACAO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int>("IdRegistroBiometriaUnico")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int")
                        .HasColumnName("SCORE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<bool>("Valido")
                        .HasColumnType("bit")
                        .HasColumnName("VALIDO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente")
                        .IsUnique();

                    b.HasIndex("IdRegistroBiometriaUnico")
                        .IsUnique();

                    b.ToTable("BIOMETRIA_CLIENTE");
                });

            modelBuilder.Entity("Dominio.BiometriaSituacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("BIOMETRIA_SITUACAO");
                });

            modelBuilder.Entity("Dominio.ClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime?>("DataAutorizacaoImportacaoDados")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_AUTORIZACAO_IMPORTACAO_DADOS");

                    b.Property<DateTime?>("DataImportacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_IMPORTACAO");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<DateTime?>("DataSolicitacaoImportacaoDados")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_SOLICITACAO_IMPORTACAO_DADOS");

                    b.Property<bool?>("DeficienteVisual")
                        .HasColumnType("bit")
                        .HasColumnName("DEFICIENTE_VISUAL");

                    b.Property<string>("Filiacao1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FILIACAO1");

                    b.Property<string>("Filiacao2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FILIACAO2");

                    b.Property<int?>("IdCidadeNatal")
                        .HasColumnType("int")
                        .HasColumnName("ID_CIDADE_NATAL");

                    b.Property<int?>("IdConjuge")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONJUGE");

                    b.Property<int?>("IdEnderecoPrincipal")
                        .HasColumnType("int")
                        .HasColumnName("ID_ENDERECO_PRINCIPAL");

                    b.Property<int?>("IdEnderecoSecundario")
                        .HasColumnType("int")
                        .HasColumnName("ID_ENDERECO_SECUNDARIO");

                    b.Property<int?>("IdEstadoCivil")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_CIVIL");

                    b.Property<int?>("IdGenero")
                        .HasColumnType("int")
                        .HasColumnName("ID_GENERO");

                    b.Property<int?>("IdGrauInstrucao")
                        .HasColumnType("int")
                        .HasColumnName("ID_GRAU_INSTRUCAO");

                    b.Property<int?>("IdLoja")
                        .HasColumnType("int")
                        .HasColumnName("ID_LOJA");

                    b.Property<int?>("IdProfissao")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROFISSAO");

                    b.Property<int?>("IdTelefonePrincipal")
                        .HasColumnType("int")
                        .HasColumnName("ID_TELEFONE_PRINCIPAL");

                    b.Property<int?>("IdTelefoneSecundario")
                        .HasColumnType("int")
                        .HasColumnName("ID_TELEFONE_SECUNDARIO");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<bool?>("ImportacaoDadosAutorizada")
                        .HasColumnType("bit")
                        .HasColumnName("IMPORTACAO_DADOS_AUTORIZADA");

                    b.Property<bool?>("ImportacaoDadosSolicitada")
                        .HasColumnType("bit")
                        .HasColumnName("IMPORTACAO_DADOS_SOLICITADA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<bool?>("OperacaoAtiva")
                        .HasColumnType("bit")
                        .HasColumnName("OPERACAO_ATIVA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCidadeNatal");

                    b.HasIndex("IdEnderecoPrincipal");

                    b.HasIndex("IdEnderecoSecundario");

                    b.HasIndex("IdEstadoCivil");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdGrauInstrucao");

                    b.HasIndex("IdLoja");

                    b.HasIndex("IdProfissao");

                    b.HasIndex("IdTelefonePrincipal");

                    b.HasIndex("IdTelefoneSecundario");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("CLIENTE");
                });

            modelBuilder.Entity("Dominio.ConjugeDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CONJUGE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int?>("IdGenero")
                        .HasColumnType("int")
                        .HasColumnName("ID_GENERO");

                    b.Property<int?>("IdTipoRegimeCasamento")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_REGIME_CASAMENTO");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente")
                        .IsUnique()
                        .HasFilter("[ID_CLIENTE] IS NOT NULL");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdTipoRegimeCasamento");

                    b.ToTable("CONJUGE");
                });

            modelBuilder.Entity("Dominio.ConsultaBeneficioInssClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CONSULTA_BENEFICIO_INSS_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChaveAutorizacao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CHAVE_AUTORIZACAO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataGeracaoArquivoTermo")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_GERACAO_ARQUIVO_TERMO");

                    b.Property<int?>("IdAnexoArquivoTermo")
                        .HasColumnType("int")
                        .HasColumnName("ID_ANEXO_ARQUIVO_TERMO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int?>("IdPaperlessDocumento")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAPERLESS_DOCUMENTO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdAnexoArquivoTermo");

                    b.HasIndex("IdCliente");

                    b.ToTable("CONSULTA_BENEFICIO_INSS_CLIENTE");
                });

            modelBuilder.Entity("Dominio.ContaClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CONTA_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("AGENCIA");

                    b.Property<string>("Conta")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CONTA");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<int>("IdBanco")
                        .HasColumnType("int")
                        .HasColumnName("ID_BANCO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int?>("IdFormaRecebimento")
                        .HasColumnType("int")
                        .HasColumnName("ID_FORMA_RECEBIMENTO");

                    b.Property<int>("IdTipoConta")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_CONTA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdFormaRecebimento");

                    b.HasIndex("IdTipoConta");

                    b.ToTable("CONTA_CLIENTE");
                });

            modelBuilder.Entity("Dominio.ConvenioDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("CONVENIO");
                });

            modelBuilder.Entity("Dominio.ConvenioOrgaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO_ORGAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdConvenio")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO");

                    b.Property<int?>("IdUnidadeFederativa")
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDADE_FEDERATIVA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdUnidadeFederativa");

                    b.ToTable("CONVENIO_ORGAO");
                });

            modelBuilder.Entity("Dominio.DocumentoIdentificacaoClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_DOCUMENTO_IDENTIFICACAO_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_EMISSAO");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit")
                        .HasColumnName("DELETADO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int>("IdOrgaoEmissor")
                        .HasColumnType("int")
                        .HasColumnName("ID_ORGAO_EMISSOR");

                    b.Property<int>("IdTipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_DOCUMENTO");

                    b.Property<int>("IdUnidadeFederativa")
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDADE_FEDERATIVA");

                    b.Property<string>("Numero")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NUMERO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdOrgaoEmissor");

                    b.HasIndex("IdTipoDocumento");

                    b.HasIndex("IdUnidadeFederativa");

                    b.ToTable("DOCUMENTO_IDENTIFICACAO_CLIENTE");
                });

            modelBuilder.Entity("Dominio.EnderecoClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ENDERECO_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("CEP");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit")
                        .HasColumnName("DELETADO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int")
                        .HasColumnName("ID_MUNICIPIO");

                    b.Property<int>("IdTipoLogradouro")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_LOGRADOURO");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit")
                        .HasColumnName("PRINCIPAL");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TITULO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdTipoLogradouro");

                    b.ToTable("ENDERECO_CLIENTE");
                });

            modelBuilder.Entity("Dominio.EstadoCivilDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_CIVIL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("ESTADO_CIVIL");
                });

            modelBuilder.Entity("Dominio.FeatureFlagDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_FEATURE_FLAG")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CHAVE");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit")
                        .HasColumnName("HABILITADO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("FEATURE_FLAG");
                });

            modelBuilder.Entity("Dominio.FormaRecebimentoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_FORMA_RECEBIMENTO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("FORMA_RECEBIMENTO");
                });

            modelBuilder.Entity("Dominio.GeneroDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_GENERO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("GENERO");
                });

            modelBuilder.Entity("Dominio.GrauInstrucaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_GRAU_INSTRUCAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("GRAU_INSTRUCAO");
                });

            modelBuilder.Entity("Dominio.InssEspecieBeneficioDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_INSS_ESPECIE_BENEFICIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("INSS_ESPECIE_BENEFICIO");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoContratoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO_CONTRATO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contrato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CONTRATO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdIntencaoOperacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdIntencaoOperacao", "Contrato")
                        .IsUnique();

                    b.ToTable("INTENCAO_OPERACAO_CONTRATO");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CustoEfetivoTotalAno")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CUSTO_EFETIVO_TOTAL_ANO");

                    b.Property<decimal>("CustoEfetivoTotalMes")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CUSTO_EFETIVO_TOTAL_MES");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INCLUSAO");

                    b.Property<int?>("IdLead")
                        .HasColumnType("int")
                        .HasColumnName("ID_LEAD");

                    b.Property<int?>("IdLoja")
                        .HasColumnType("int")
                        .HasColumnName("ID_LOJA");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<int?>("IdRendimentoCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_RENDIMENTO_CLIENTE");

                    b.Property<int>("IdTipoOperacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_OPERACAO");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<decimal>("ImpostoOperacaoFinanceira")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("IMPOSTO_OPERACAO_FINANCEIRA");

                    b.Property<int>("Prazo")
                        .HasColumnType("int")
                        .HasColumnName("PRAZO");

                    b.Property<decimal>("Prestacao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRESTACAO");

                    b.Property<DateTime>("PrimeiroVencimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("PRIMEIRO_VENCIMENTO");

                    b.Property<string>("Proposta")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PROPOSTA");

                    b.Property<decimal>("TaxaAno")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TAXA_ANO");

                    b.Property<decimal>("TaxaMes")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TAXA_MES");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorAuxilioFinanceiro")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_AUXILIO_FINANCEIRO");

                    b.Property<decimal>("ValorFinanciado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_FINANCIADO");

                    b.HasKey("ID");

                    b.HasIndex("IdLead");

                    b.HasIndex("IdLoja");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdRendimentoCliente");

                    b.HasIndex("IdTipoOperacao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("INTENCAO_OPERACAO");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoHistoricoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO_HISTORICO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("DescricaoEspecifica")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DESCRICAO_ESPECIFICA");

                    b.Property<int>("IdIntencaoOperacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO");

                    b.Property<int>("IdIntencaoOperacaoSituacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO_SITUACAO");

                    b.Property<bool>("PendenciaUsuario")
                        .HasColumnType("bit")
                        .HasColumnName("PENDENCIA_USUARIO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdIntencaoOperacao");

                    b.HasIndex("IdIntencaoOperacaoSituacao");

                    b.ToTable("INTENCAO_OPERACAO_HISTORICO");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoObservacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO_OBSERVACAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INCLUSAO");

                    b.Property<int>("IdIntencaoOperacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdIntencaoOperacao");

                    b.ToTable("INTENCAO_OPERACAO_OBSERVACAO");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoPortabilidadeDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO_PORTABILIDADE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdBancoOriginador")
                        .HasColumnType("int")
                        .HasColumnName("ID_BANCO_ORIGINADOR");

                    b.Property<int>("IdIntencaoOperacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO");

                    b.Property<string>("PlanoRefinanciamento")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("PLANO_REFINANCIAMENTO");

                    b.Property<int?>("PrazoRefinanciamento")
                        .HasColumnType("int")
                        .HasColumnName("PRAZO_REFINANCIAMENTO");

                    b.Property<int>("PrazoRestante")
                        .HasColumnType("int")
                        .HasColumnName("PRAZO_RESTANTE");

                    b.Property<int>("PrazoTotal")
                        .HasColumnType("int")
                        .HasColumnName("PRAZO_TOTAL");

                    b.Property<decimal>("SaldoDevedor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SALDO_DEVEDOR");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal?>("ValorPrestacaoRefinanciamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PRESTACAO_REFINANCIAMENTO");

                    b.HasKey("ID");

                    b.HasIndex("IdBancoOriginador");

                    b.HasIndex("IdIntencaoOperacao")
                        .IsUnique();

                    b.ToTable("INTENCAO_OPERACAO_PORTABILIDADE");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoSituacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO_SITUACAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("DescricaoPadrao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DESCRICAO_PADRAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<bool>("PermiteAtualizacoes")
                        .HasColumnType("bit")
                        .HasColumnName("PERMITE_ATUALIZACOES");

                    b.Property<bool>("PermiteSituacaoExtraordinaria")
                        .HasColumnType("bit")
                        .HasColumnName("PERMITE_SITUACAO_EXTRAORDINARIA");

                    b.Property<bool>("SituacaoExtraordinaria")
                        .HasColumnType("bit")
                        .HasColumnName("SITUACAO_EXTRAORDINARIA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("INTENCAO_OPERACAO_SITUACAO");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoSituacaoPassoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO_SITUACAO_PASSO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdIntencaoOperacaoSituacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_INTENCAO_OPERACAO_SITUACAO");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<int?>("IdProximoPasso")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROXIMO_PASSO");

                    b.Property<int?>("IdProximoPassoExcecao")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROXIMO_PASSO_EXCECAO");

                    b.Property<int>("IdTipoOperacao")
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID_TIPO_OPERACAO");

                    b.Property<bool>("PassoInicial")
                        .HasColumnType("bit")
                        .HasColumnName("PASSO_INICIAL");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdIntencaoOperacaoSituacao");

                    b.HasIndex("IdProximoPasso");

                    b.HasIndex("IdProximoPassoExcecao");

                    b.HasIndex("IdTipoOperacao");

                    b.HasIndex("IdProduto", "IdTipoOperacao", "IdIntencaoOperacaoSituacao")
                        .IsUnique();

                    b.HasIndex("IdProduto", "PassoInicial", "IdTipoOperacao")
                        .IsUnique()
                        .HasFilter("[PASSO_INICIAL] = 1");

                    b.ToTable("INTENCAO_OPERACAO_SITUACAO_PASSO");
                });

            modelBuilder.Entity("Dominio.LeadCorrespondenteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_LEAD_CORRESPONDENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Atividades")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("ATIVIDADES");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int")
                        .HasColumnName("ID_MUNICIPIO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("LEAD_CORRESPONDENTE");
                });

            modelBuilder.Entity("Dominio.LeadDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_LEAD")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CELULAR");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<bool>("DesejaContatoWhatsApp")
                        .HasColumnType("bit")
                        .HasColumnName("DESEJA_CONTATO_WHATSAPP");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<int?>("IdConvenio")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO");

                    b.Property<int?>("IdLoja")
                        .HasColumnType("int")
                        .HasColumnName("ID_LOJA");

                    b.Property<int?>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<double>("Latitude")
                        .HasMaxLength(10)
                        .HasColumnType("float")
                        .HasColumnName("LATITUDE");

                    b.Property<string>("LinkContatoWhatsAppLoja")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("LINK_CONTATO_WHATSAPP_LOJA");

                    b.Property<double>("Longitude")
                        .HasMaxLength(10)
                        .HasColumnType("float")
                        .HasColumnName("LONGITUDE");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("OrigemRequisicaoCampanha")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("ORIGEM_REQUISICAO_CAMPANHA");

                    b.Property<string>("OrigemRequisicaoConteudo")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("ORIGEM_REQUISICAO_CONTEUDO");

                    b.Property<string>("OrigemRequisicaoMidia")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("ORIGEM_REQUISICAO_MIDIA");

                    b.Property<string>("OrigemRequisicaoPalavraChave")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("ORIGEM_REQUISICAO_PALAVRA_CHAVE");

                    b.Property<string>("OrigemRequisicaoTermo")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("ORIGEM_REQUISICAO_TERMO");

                    b.Property<bool>("Quitacao")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdLoja");

                    b.HasIndex("IdProduto");

                    b.ToTable("LEAD");
                });

            modelBuilder.Entity("Dominio.LojaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_LOJA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("CEP");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<Point>("Geolocalizacao")
                        .HasColumnType("geography")
                        .HasColumnName("GEOLOCALIZACAO");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int")
                        .HasColumnName("ID_MUNICIPIO");

                    b.Property<int>("IdTipoLogradouro")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_LOGRADOURO");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("MensagemApresentacao")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("MENSAGEM_APRESENTACAO");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdTipoLogradouro");

                    b.ToTable("LOJA");
                });

            modelBuilder.Entity("Dominio.MarinhaCargoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MARINHA_CARGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("MARINHA_CARGO");
                });

            modelBuilder.Entity("Dominio.MarinhaTipoFuncionalDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MARINHA_TIPO_FUNCIONAL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("MARINHA_TIPO_FUNCIONAL");
                });

            modelBuilder.Entity("Dominio.MunicipioDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MUNICIPIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("IdUnidadeFederativa")
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDADE_FEDERATIVA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdUnidadeFederativa");

                    b.ToTable("MUNICIPIO");
                });

            modelBuilder.Entity("Dominio.NotificacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_NOTIFICACAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Completo")
                        .HasColumnType("bit")
                        .HasColumnName("COMPLETO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_CRIACAO");

                    b.Property<DateTime?>("DataVisualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_VISUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("IdNotificacaoFinalidade")
                        .HasColumnType("int")
                        .HasColumnName("ID_NOTIFICACAO_FINALIDADE");

                    b.Property<int>("IdNotificacaoSeveridade")
                        .HasColumnType("int")
                        .HasColumnName("ID_NOTIFICACAO_SEVERIDADE");

                    b.Property<int?>("IdTemplateNotificacao")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_NOTIFICACAO");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TITULO");

                    b.Property<string>("UrlReferencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("URL_REFERENCIA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdNotificacaoFinalidade");

                    b.HasIndex("IdNotificacaoSeveridade");

                    b.HasIndex("IdTemplateNotificacao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("NOTIFICACAO");
                });

            modelBuilder.Entity("Dominio.NotificacaoFinalidadeDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_NOTIFICACAO_FINALIDADE");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("NOTIFICACAO_FINALIDADE");
                });

            modelBuilder.Entity("Dominio.NotificacaoSeveridadeDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_NOTIFICACAO_SEVERIDADE");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("NOTIFICACAO_SEVERIDADE");
                });

            modelBuilder.Entity("Dominio.NotificacaoTemplateDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_NOTIFICACAO_TEMPLATE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("IdNotificacaoFinalidade")
                        .HasColumnType("int")
                        .HasColumnName("ID_NOTIFICACAO_FINALIDADE");

                    b.Property<int>("IdNotificacaoSeveridade")
                        .HasColumnType("int")
                        .HasColumnName("ID_NOTIFICACAO_SEVERIDADE");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TITULO");

                    b.Property<string>("UrlReferencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("URL_REFERENCIA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdNotificacaoFinalidade")
                        .IsUnique();

                    b.HasIndex("IdNotificacaoSeveridade");

                    b.ToTable("NOTIFICACAO_TEMPLATE");
                });

            modelBuilder.Entity("Dominio.OrgaoEmissorIdentificacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ORGAO_EMISSOR_IDENTIFICACAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("ORGAO_EMISSOR_IDENTIFICACAO");
                });

            modelBuilder.Entity("Dominio.ParametroOperacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PARAMETRO_OPERACAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdConvenio")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO");

                    b.Property<int>("IdTipoOperacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_OPERACAO");

                    b.Property<string>("InstituicaoFinanceira")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("INSTITUICAO_FINANCEIRA");

                    b.Property<string>("QuantidadeParcelas")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("QUANTIDADE_PARCELAS");

                    b.Property<string>("TaxaPlano")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TAXA_PLANO");

                    b.Property<bool>("TentativaRetencao")
                        .HasColumnType("bit")
                        .HasColumnName("TENTATIVA_RETENCAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdTipoOperacao");

                    b.ToTable("PARAMETRO_OPERACAO");
                });

            modelBuilder.Entity("Dominio.ProdutoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<bool>("RequerConvenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("REQUER_CONVENIO");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("PRODUTO");
                });

            modelBuilder.Entity("Dominio.RedeSocialDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_REDE_SOCIAL");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("REDE_SOCIAL");
                });

            modelBuilder.Entity("Dominio.RegistroBiometriaUnicoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_REGISTRO_BIOMETRIA_UNICO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGO");

                    b.Property<int?>("CodigoErro")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_ERRO");

                    b.Property<int>("CodigoSituacaoBiometria")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_SITUACAO_BIOMETRIA");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ENVIO");

                    b.Property<DateTime>("DataRetorno")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_RETORNO");

                    b.Property<bool>("FaceMatch")
                        .HasColumnType("bit")
                        .HasColumnName("FACE_MATCH");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<bool>("Liveness")
                        .HasColumnType("bit")
                        .HasColumnName("LIVENESS");

                    b.Property<bool>("PossuiBiometria")
                        .HasColumnType("bit")
                        .HasColumnName("POSSUI_BIOMETRIA");

                    b.Property<int>("Score")
                        .HasColumnType("int")
                        .HasColumnName("SCORE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.ToTable("REGISTRO_BIOMETRIA_UNICO");
                });

            modelBuilder.Entity("Dominio.RegistroClubeBeneficiosDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_REGISTRO_CLUBE_BENEFICIOS")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAcesso")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ACESSO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente")
                        .IsUnique();

                    b.ToTable("REGISTRO_CLUBE_BENEFICIOS");
                });

            modelBuilder.Entity("Dominio.RegistroEmailDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_REGISTRO_EMAIL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoOrigem")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_ORIGEM");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Destinatarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESTINATARIOS");

                    b.Property<int>("IdFinalidade")
                        .HasColumnType("int")
                        .HasColumnName("ID_FINALIDADE");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdFinalidade");

                    b.HasIndex("IdUsuario");

                    b.ToTable("REGISTRO_EMAIL");
                });

            modelBuilder.Entity("Dominio.RegistroSmsDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_REGISTRO_SMS")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoOrigem")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_ORIGEM");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdTemplateSms")
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_SMS");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("MENSAGEM");

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NUMERO_TELEFONE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdTemplateSms");

                    b.HasIndex("IdUsuario");

                    b.ToTable("REGISTRO_SMS");
                });

            modelBuilder.Entity("Dominio.RegistroTorpedoVozDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_REGISTRO_TORPEDO_VOZ")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoOrigem")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_ORIGEM");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdTemplateTorpedoVoz")
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_TORPEDO_VOZ");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("MENSAGEM");

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NUMERO_TELEFONE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdTemplateTorpedoVoz");

                    b.HasIndex("IdUsuario");

                    b.ToTable("REGISTRO_TORPEDO_VOZ");
                });

            modelBuilder.Entity("Dominio.RegistroWhatsappDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_REGISTRO_WHATSAPP")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoOrigem")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_ORIGEM");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdTemplateWhatsapp")
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_WHATSAPP");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NUMERO_TELEFONE");

                    b.Property<string>("ParametrosMensagem")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("PARAMETROS_MENSAGEM");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdTemplateWhatsapp");

                    b.HasIndex("IdUsuario");

                    b.ToTable("REGISTRO_WHATSAPP");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_RENDIMENTO_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit")
                        .HasColumnName("DELETADO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int>("IdContaCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONTA_CLIENTE");

                    b.Property<int>("IdContaClienteRecebimento")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONTA_CLIENTE_RECEBIMENTO");

                    b.Property<int>("IdConvenio")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO");

                    b.Property<int>("IdConvenioOrgao")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO_ORGAO");

                    b.Property<int>("IdUf")
                        .HasColumnType("int")
                        .HasColumnName("ID_UF");

                    b.Property<decimal?>("MargemDisponivel")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MARGEM_DISPONIVEL");

                    b.Property<decimal?>("MargemDisponivelCartao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MARGEM_DISPONIVEL_CARTAO");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("MATRICULA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorRendimento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_RENDIMENTO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdContaCliente");

                    b.HasIndex("IdContaClienteRecebimento");

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdConvenioOrgao");

                    b.HasIndex("IdUf");

                    b.ToTable("RENDIMENTO_CLIENTE");
                });

            modelBuilder.Entity("Dominio.SeguroBeneficiarioDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_BENEFICIARIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<int?>("IdSeguroCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_CLIENTE");

                    b.Property<int?>("IdSeguroParentesco")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PARENTESCO");

                    b.Property<int?>("IdSeguroProposta")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROPOSTA");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorPercentual")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PERCENTUAL");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroCliente");

                    b.HasIndex("IdSeguroParentesco");

                    b.HasIndex("IdSeguroProposta");

                    b.ToTable("SEGURO_BENEFICIARIO");
                });

            modelBuilder.Entity("Dominio.SeguroBeneficiarioIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_BENEFICIARIO_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<int?>("IdSeguroClienteIcatu")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_CLIENTE_ICATU");

                    b.Property<int?>("IdSeguroParentescoIcatu")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PARENTESCO_ICATU");

                    b.Property<int?>("IdSeguroProposta")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROPOSTA");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorPercentual")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PERCENTUAL");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroClienteIcatu");

                    b.HasIndex("IdSeguroParentescoIcatu");

                    b.HasIndex("IdSeguroProposta");

                    b.ToTable("SEGURO_BENEFICIARIO_ICATU");
                });

            modelBuilder.Entity("Dominio.SeguroClienteIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_CLIENTE_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aposentado")
                        .HasColumnType("bit")
                        .HasColumnName("APOSENTADO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int?>("IdEnderecoCobranca")
                        .HasColumnType("int")
                        .HasColumnName("ID_ENDERECO_COBRANCA");

                    b.Property<int?>("IdEnderecoPrincipal")
                        .HasColumnType("int")
                        .HasColumnName("ID_ENDERECO_PRINCIPAL");

                    b.Property<int?>("IdEstadoCivil")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_CIVIL");

                    b.Property<int?>("IdGenero")
                        .HasColumnType("int")
                        .HasColumnName("ID_GENERO");

                    b.Property<int?>("IdProfissaoIcatu")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROFISSAO_ICATU");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NACIONALIDADE");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NOME");

                    b.Property<string>("PPE")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PPE");

                    b.Property<bool>("RelacionamentoEletronico")
                        .HasColumnType("bit")
                        .HasColumnName("RELACIONAMENTO_ELETRONICO");

                    b.Property<decimal>("RendaMensal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RENDA_MENSAL");

                    b.Property<bool>("ResidentePais")
                        .HasColumnType("bit")
                        .HasColumnName("RESIDENTE_PAIS");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente")
                        .IsUnique()
                        .HasFilter("[ID_CLIENTE] IS NOT NULL");

                    b.HasIndex("IdEnderecoCobranca");

                    b.HasIndex("IdEnderecoPrincipal");

                    b.HasIndex("IdEstadoCivil");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdProfissaoIcatu");

                    b.ToTable("SEGURO_CLIENTE_ICATU");
                });

            modelBuilder.Entity("Dominio.SeguroClienteTelefoneDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_CLIENTE_TELEFONE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DDD")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("DDD");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit")
                        .HasColumnName("DELETADO");

                    b.Property<string>("Fone")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("FONE");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit")
                        .HasColumnName("PRINCIPAL");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.ToTable("SEGURO_CLIENTE_TELEFONE");
                });

            modelBuilder.Entity("Dominio.SeguroCoberturaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_COBERTURA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoCobertura")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_COBERTURA");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdSeguroProduto")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PRODUTO");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("TIPO");

                    b.Property<string>("TipoProponente")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("TIPO_PROPONENTE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorCapital")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_CAPITAL");

                    b.Property<decimal>("ValorPremio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PREMIO");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroProduto");

                    b.ToTable("SEGURO_COBERTURA");
                });

            modelBuilder.Entity("Dominio.SeguroCoberturaIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_COBERTURA_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoCobertura")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_COBERTURA");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdSeguroProdutoIcatu")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PRODUTO_ICATU");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("TIPO");

                    b.Property<string>("TipoProponente")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("TIPO_PROPONENTE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorCapital")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_CAPITAL");

                    b.Property<decimal>("ValorPremio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PREMIO");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroProdutoIcatu");

                    b.ToTable("SEGURO_COBERTURA_ICATU");
                });

            modelBuilder.Entity("Dominio.SeguroCobrancaPropostaCartaoIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_COBRANCA_PROPOSTA_CARTAO_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CpfTitular")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("CPF_TITULAR");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("IdCartao")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("ID_CARTAO");

                    b.Property<string>("IdCobranca")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("ID_COBRANCA");

                    b.Property<int?>("IdSeguroCobrancaPropostaIcatu")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_COBRANCA_PROPOSTA_ICATU");

                    b.Property<string>("QuatroUltimosDigitosCartao")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("QUATRO_ULTIMOS_DIGITOS_CARTAO");

                    b.Property<string>("Titular")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TITULAR");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroCobrancaPropostaIcatu")
                        .IsUnique()
                        .HasFilter("[ID_SEGURO_COBRANCA_PROPOSTA_ICATU] IS NOT NULL");

                    b.ToTable("SEGURO_COBRANCA_PROPOSTA_CARTAO_ICATU");
                });

            modelBuilder.Entity("Dominio.SeguroCobrancaPropostaIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_COBRANCA_PROPOSTA_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date")
                        .HasColumnName("DATA_VENCIMENTO");

                    b.Property<string>("IdCobranca")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ID_COBRANCA");

                    b.Property<int>("IdConvenio")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO");

                    b.Property<string>("IdLinkPagamento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ID_LINK_PAGAMENTO");

                    b.Property<string>("IdPedidoPagamento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ID_PEDIDO_PAGAMENTO");

                    b.Property<int?>("IdSeguroPropostaIcatu")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROPOSTA_ICATU");

                    b.Property<string>("LinkPagamento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LINK_PAGAMENTO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroPropostaIcatu");

                    b.ToTable("SEGURO_COBRANCA_PROPOSTA_ICATU");
                });

            modelBuilder.Entity("Dominio.SeguroEnderecoClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_ENDERECO_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("CEP");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int?>("IdMunicipio")
                        .HasColumnType("int")
                        .HasColumnName("ID_MUNICIPIO");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("SEGURO_ENDERECO_CLIENTE");
                });

            modelBuilder.Entity("Dominio.SeguroParentescoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PARENTESCO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("SEGURO_PARENTESCO");
                });

            modelBuilder.Entity("Dominio.SeguroParentescoIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PARENTESCO_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("IdSeguroParentescoBem")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PARENTESCO_BEM");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroParentescoBem")
                        .IsUnique();

                    b.ToTable("SEGURO_PARENTESCO_ICATU");
                });

            modelBuilder.Entity("Dominio.SeguroProdutoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PRODUTO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataFimVigencia")
                        .HasColumnType("date")
                        .HasColumnName("DATA_FIM_VIGENCIA");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("date")
                        .HasColumnName("DATA_INICIO_VIGENCIA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorPremio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PREMIO");

                    b.HasKey("ID");

                    b.HasIndex("IdProduto");

                    b.ToTable("SEGURO_PRODUTO");
                });

            modelBuilder.Entity("Dominio.SeguroProdutoIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PRODUTO_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoGrupoApolice")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_GRUPO_APOLICE");

                    b.Property<string>("CodigoPontoVenda")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("CODIGO_PONTO_VENDA");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataFimVigencia")
                        .HasColumnType("date")
                        .HasColumnName("DATA_FIM_VIGENCIA");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("date")
                        .HasColumnName("DATA_INICIO_VIGENCIA");

                    b.Property<int>("IdParceria")
                        .HasColumnType("int")
                        .HasColumnName("ID_PARCERIA");

                    b.Property<int?>("IdSeguroProduto")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PRODUTO");

                    b.Property<int>("Modulo")
                        .HasColumnType("int")
                        .HasColumnName("MODULO");

                    b.Property<int>("Subestipulante")
                        .HasColumnType("int")
                        .HasColumnName("SUBESTIPULANTE");

                    b.Property<int>("TipoNumeracaoProposta")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_NUMERACAO_PROPOSTA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorPremio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PREMIO");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroProduto");

                    b.ToTable("SEGURO_PRODUTO_ICATU");
                });

            modelBuilder.Entity("Dominio.SeguroProfissaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROFISSAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("SEGURO_PROFISSAO");
                });

            modelBuilder.Entity("Dominio.SeguroProfissaoIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROFISSAO_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("IdSeguroProfissaoBem")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROFISSAO_BEM");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroProfissaoBem")
                        .IsUnique();

                    b.ToTable("SEGURO_PROFISSAO_ICATU");
                });

            modelBuilder.Entity("Dominio.SeguroPropostaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROPOSTA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAssinatura")
                        .HasColumnType("date")
                        .HasColumnName("DATA_ASSINATURA");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataFimVigencia")
                        .HasColumnType("date")
                        .HasColumnName("DATA_FIM_VIGENCIA");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("date")
                        .HasColumnName("DATA_INICIO_VIGENCIA");

                    b.Property<DateTime>("DataProtocolo")
                        .HasColumnType("date")
                        .HasColumnName("DATA_PROTOCOLO");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date")
                        .HasColumnName("DATA_VENCIMENTO");

                    b.Property<string>("IPOrigem")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("IP_ORIGEM");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int>("IdSeguroProduto")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PRODUTO");

                    b.Property<int>("Latitude")
                        .HasColumnType("int")
                        .HasColumnName("LATITUDE");

                    b.Property<int>("Longitude")
                        .HasColumnType("int")
                        .HasColumnName("LONGITUDE");

                    b.Property<long>("NumeroPropostaIcatu")
                        .HasColumnType("bigint")
                        .HasColumnName("NUMERO_PROPOSTA_ICATU");

                    b.Property<string>("UrlPdfContrato")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URL_PDF_CONTRATO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorPremioTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PREMIO_TOTAL");

                    b.Property<bool>("ValorPrimeiroPremioPago")
                        .HasColumnType("bit")
                        .HasColumnName("VALOR_PRIMEIRO_PREMIO_PAGO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente")
                        .IsUnique();

                    b.HasIndex("IdSeguroProduto");

                    b.ToTable("SEGURO_PROPOSTA");
                });

            modelBuilder.Entity("Dominio.SeguroPropostaIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROPOSTA_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAssinatura")
                        .HasColumnType("date")
                        .HasColumnName("DATA_ASSINATURA");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataFimVigencia")
                        .HasColumnType("date")
                        .HasColumnName("DATA_FIM_VIGENCIA");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("date")
                        .HasColumnName("DATA_INICIO_VIGENCIA");

                    b.Property<DateTime>("DataProtocolo")
                        .HasColumnType("date")
                        .HasColumnName("DATA_PROTOCOLO");

                    b.Property<int?>("IdSeguroClienteIcatu")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_CLIENTE_ICATU");

                    b.Property<int?>("IdSeguroProposta")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROPOSTA");

                    b.Property<long>("NumeroPropostaIcatu")
                        .HasColumnType("bigint")
                        .HasColumnName("NUMERO_PROPOSTA_ICATU");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<decimal>("ValorPremioTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PREMIO_TOTAL");

                    b.Property<bool>("ValorPrimeiroPremioPago")
                        .HasColumnType("bit")
                        .HasColumnName("VALOR_PRIMEIRO_PREMIO_PAGO");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroClienteIcatu");

                    b.HasIndex("IdSeguroProposta")
                        .IsUnique()
                        .HasFilter("[ID_SEGURO_PROPOSTA] IS NOT NULL");

                    b.ToTable("SEGURO_PROPOSTA_ICATU");
                });

            modelBuilder.Entity("Dominio.SeguroSituacaoIcatuDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_SITUACAO_ICATU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int?>("IdSeguroPropostaIcatu")
                        .HasColumnType("int")
                        .HasColumnName("ID_SEGURO_PROPOSTA_ICATU");

                    b.Property<string>("Status")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("STATUS");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdSeguroPropostaIcatu");

                    b.ToTable("SEGURO_SITUACAO_ICATU");
                });

            modelBuilder.Entity("Dominio.SiapeTipoFuncionalDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SIAPE_TIPO_FUNCIONAL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("SIAPE_TIPO_FUNCIONAL");
                });

            modelBuilder.Entity("Dominio.SolicitacaoAcessoDadosPessoaisClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SOLICITACAO_ACESSO_DADOS_PESSOAIS_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("MOTIVO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOME");

                    b.Property<string>("NomeMae")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME_MAE");

                    b.Property<bool>("NotificacaoEnviada")
                        .HasColumnType("bit")
                        .HasColumnName("NOTIFICACAO_ENVIADA");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SOBRENOME");

                    b.Property<string>("TelefoneCompleto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TELEFONE_COMPLETO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("SOLICITACAO_ACESSO_DADOS_PESSOAIS_CLIENTE");
                });

            modelBuilder.Entity("Dominio.SolicitacaoDocumentoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SOLICITACAO_DOCUMENTO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Concluido")
                        .HasColumnType("bit")
                        .HasColumnName("CONCLUIDO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_SOLICITACAO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int>("IdTipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_DOCUMENTO");

                    b.Property<string>("Motivo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("MOTIVO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("SOLICITACAO_DOCUMENTO");
                });

            modelBuilder.Entity("Dominio.TelefoneClienteDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TELEFONE_CLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit")
                        .HasColumnName("CONFIRMADO");

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("DDD");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit")
                        .HasColumnName("DELETADO");

                    b.Property<string>("Fone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("FONE");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdCliente");

                    b.ToTable("TELEFONE_CLIENTE");
                });

            modelBuilder.Entity("Dominio.TelefoneClienteSolicitacaoConfirmacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TELEFONE_CLIENTE_SOLICITACAO_CONFIRMACAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime?>("DataEnvioSolicitacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ENVIO_SOLICITACAO");

                    b.Property<bool>("Enviada")
                        .HasColumnType("bit")
                        .HasColumnName("ENVIADA");

                    b.Property<int>("IdTelefoneCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_TELEFONE_CLIENTE");

                    b.Property<int>("IdTipoSolicitacaoConfirmacao")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_SOLICITACAO_CONFIRMACAO");

                    b.Property<string>("MensagemErro")
                        .HasColumnType("varchar(max)")
                        .HasColumnName("MENSAGEM_ERRO");

                    b.Property<int>("QuantidadeEnviosEfetuados")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE_ENVIOS_EFETUADOS");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("TOKEN");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdTelefoneCliente");

                    b.HasIndex("IdTipoSolicitacaoConfirmacao");

                    b.ToTable("TELEFONE_CLIENTE_SOLICITACAO_CONFIRMACAO");
                });

            modelBuilder.Entity("Dominio.TelefoneLojaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TELEFONE_LOJA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdLoja")
                        .HasColumnType("int")
                        .HasColumnName("ID_LOJA");

                    b.Property<string>("MensagemApresentacao")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("MENSAGEM_APRESENTACAO");

                    b.Property<bool>("PossuiContaWhatsApp")
                        .HasColumnType("bit")
                        .HasColumnName("POSSUI_CONTA_WHATSAPP");

                    b.Property<string>("Telefone")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdLoja");

                    b.ToTable("TELEFONE_LOJA");
                });

            modelBuilder.Entity("Dominio.TemplateEmailDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_EMAIL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTEUDO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdFinalidade")
                        .HasColumnType("int")
                        .HasColumnName("ID_FINALIDADE");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdFinalidade");

                    b.HasIndex("IdTipo", "IdFinalidade")
                        .IsUnique();

                    b.ToTable("TEMPLATE_EMAIL");
                });

            modelBuilder.Entity("Dominio.TemplateEmailFinalidadeDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_EMAIL_FINALIDADE");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TEMPLATE_EMAIL_FINALIDADE");
                });

            modelBuilder.Entity("Dominio.TemplateEmailTipoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_EMAIL_TIPO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TEMPLATE_EMAIL_TIPO");
                });

            modelBuilder.Entity("Dominio.TemplateSmsDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_SMS");

                    b.Property<string>("Conteudo")
                        .HasMaxLength(160)
                        .IsUnicode(false)
                        .HasColumnType("varchar(160)")
                        .HasColumnName("CONTEUDO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TEMPLATE_SMS");
                });

            modelBuilder.Entity("Dominio.TemplateTorpedoVozDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_TORPEDO_VOZ");

                    b.Property<string>("Conteudo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CONTEUDO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TEMPLATE_TORPEDO_VOZ");
                });

            modelBuilder.Entity("Dominio.TemplateWhatsappDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TEMPLATE_WHATSAPP");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("GUID")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GUID");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TEMPLATE_WHATSAPP");
                });

            modelBuilder.Entity("Dominio.TermoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TERMO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INICIO_VIGENCIA");

                    b.Property<string>("Descricao")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("IdTipoTermo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_TERMO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdTipoTermo");

                    b.ToTable("TERMO");
                });

            modelBuilder.Entity("Dominio.TipoContaDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_CONTA");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NOME");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TIPO_CONTA");
                });

            modelBuilder.Entity("Dominio.TipoDocumentoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_DOCUMENTO");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NOME");

                    b.Property<bool>("TipoDocumentoIdentificacaoPessoal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("TIPO_DOCUMENTO_IDENTIFICACAO_PESSOAL");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TIPO_DOCUMENTO");
                });

            modelBuilder.Entity("Dominio.TipoLogradouroDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_LOGRADOURO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TIPO_LOGRADOURO");
                });

            modelBuilder.Entity("Dominio.TipoOperacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_OPERACAO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TIPO_OPERACAO");
                });

            modelBuilder.Entity("Dominio.TipoRegimeCasamentoBemDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_REGIME_CASAMENTO_BEM")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("IdTipoRegimeCasamento")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_REGIME_CASAMENTO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdTipoRegimeCasamento");

                    b.ToTable("TIPO_REGIME_CASAMENTO_BEM");
                });

            modelBuilder.Entity("Dominio.TipoRegimeCasamentoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_REGIME_CASAMENTO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TIPO_REGIME_CASAMENTO");
                });

            modelBuilder.Entity("Dominio.TipoSolicitacaoConfirmacaoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_SOLICITACAO_CONFIRMACAO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TIPO_SOLICITACAO_CONFIRMACAO");
                });

            modelBuilder.Entity("Dominio.TipoTermoDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_TERMO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("TIPO_TERMO");
                });

            modelBuilder.Entity("Dominio.TipoVinculoInstitucionalDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_VINCULO_INSTITUCIONAL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("TIPO_VINCULO_INSTITUCIONAL");
                });

            modelBuilder.Entity("Dominio.UnidadeFederativaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDADE_FEDERATIVA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("NOME");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("UNIDADE_FEDERATIVA");
                });

            modelBuilder.Entity("Dominio.UsuarioConfirmacaoEmailDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO_CONFIRMACAO_EMAIL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataRequisicao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_REQUISICAO");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TOKEN");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<bool>("Valido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("VALIDO");

                    b.HasKey("ID");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("USUARIO_CONFIRMACAO_EMAIL");
                });

            modelBuilder.Entity("Dominio.UsuarioDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Administrador")
                        .HasColumnType("bit")
                        .HasColumnName("ADMINISTRADOR");

                    b.Property<string>("CPF")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("bit")
                        .HasColumnName("EMAIL_CONFIRMADO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SENHA");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("Dominio.UsuarioRecuperacaoSenhaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO_RECUPERACAO_SENHA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataRequisicao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_REQUISICAO");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TOKEN");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<bool>("Valido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("VALIDO");

                    b.HasKey("ID");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("USUARIO_RECUPERACAO_SENHA");
                });

            modelBuilder.Entity("Dominio.UsuarioRedeSocialDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO_REDE_SOCIAL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdRedeSocial")
                        .HasColumnType("int")
                        .HasColumnName("ID_REDE_SOCIAL");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LOGIN");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdUsuario", "IdRedeSocial")
                        .IsUnique();

                    b.ToTable("USUARIO_REDE_SOCIAL");
                });

            modelBuilder.Entity("Dominio.UsuarioRequisicaoLogDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO_REQUISICAO_LOG")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorpoRequisicao")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("CORPO_REQUISICAO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("UrlRequisicao")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("URL_REQUISICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.Property<string>("UsuarioTenant")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USUARIO_TENANT");

                    b.HasKey("ID");

                    b.HasIndex("IdUsuario");

                    b.ToTable("USUARIO_REQUISICAO_LOG");
                });

            modelBuilder.Entity("Dominio.UsuarioTermoDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO_TERMO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdTermo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TERMO");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdTermo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("USUARIO_TERMO");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteAeronauticaDominio", b =>
                {
                    b.HasBaseType("Dominio.RendimentoClienteDominio");

                    b.Property<int?>("IdAeronauticaCargo")
                        .HasColumnType("int")
                        .HasColumnName("ID_AERONAUTICA_CARGO");

                    b.Property<int>("IdAeronauticaTipoFuncional")
                        .HasColumnType("int")
                        .HasColumnName("ID_AERONAUTICA_TIPO_FUNCIONAL");

                    b.HasIndex("IdAeronauticaCargo");

                    b.HasIndex("IdAeronauticaTipoFuncional");

                    b.ToTable("RENDIMENTO_CLIENTE_AERONAUTICA");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteInssDominio", b =>
                {
                    b.HasBaseType("Dominio.RendimentoClienteDominio");

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnType("date")
                        .HasColumnName("DATA_INSCRICAO");

                    b.Property<int>("IdInssEspecieBeneficio")
                        .HasColumnType("int")
                        .HasColumnName("ID_INSS_ESPECIE_BENEFICIO");

                    b.HasIndex("IdInssEspecieBeneficio");

                    b.ToTable("RENDIMENTO_CLIENTE_INSS");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteMarinhaDominio", b =>
                {
                    b.HasBaseType("Dominio.RendimentoClienteDominio");

                    b.Property<int?>("IdMarinhaCargo")
                        .HasColumnType("int")
                        .HasColumnName("ID_MARINHA_CARGO");

                    b.Property<int>("IdMarinhaTipoFuncional")
                        .HasColumnType("int")
                        .HasColumnName("ID_MARINHA_TIPO_FUNCIONAL");

                    b.HasIndex("IdMarinhaCargo");

                    b.HasIndex("IdMarinhaTipoFuncional");

                    b.ToTable("RENDIMENTO_CLIENTE_MARINHA");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteSiapeDominio", b =>
                {
                    b.HasBaseType("Dominio.RendimentoClienteDominio");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("date")
                        .HasColumnName("DATA_ADMISSAO");

                    b.Property<DateTime?>("DataLiberacaoConsultaMargem")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_LIBERACAO_CONSULTA_MARGEM");

                    b.Property<int>("IdSiapeTipoFuncional")
                        .HasColumnType("int")
                        .HasColumnName("ID_SIAPE_TIPO_FUNCIONAL");

                    b.Property<string>("MatriculaInstituidor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MATRICULA_INSTITUIDOR");

                    b.Property<string>("NomeInstituidor")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("NOME_INSTITUIDOR");

                    b.Property<bool>("PossuiRepresentacaoPorProcurador")
                        .HasColumnType("bit")
                        .HasColumnName("POSSUI_REPRESENTACAO_POR_PROCURADOR");

                    b.HasIndex("IdSiapeTipoFuncional");

                    b.ToTable("RENDIMENTO_CLIENTE_SIAPE");
                });

            modelBuilder.Entity("Dominio.AnexoDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("Anexos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.TipoDocumentoDominio", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("Dominio.BaseCepDominio", b =>
                {
                    b.HasOne("Dominio.MunicipioDominio", "Municipio")
                        .WithMany()
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoLogradouroDominio", "TipoLogradouro")
                        .WithMany()
                        .HasForeignKey("IdTipoLogradouro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UnidadeFederativaDominio", "UF")
                        .WithMany()
                        .HasForeignKey("IdUnidadeFederativa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Municipio");

                    b.Navigation("TipoLogradouro");

                    b.Navigation("UF");
                });

            modelBuilder.Entity("Dominio.BiometriaClienteDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithOne("BiometriaCliente")
                        .HasForeignKey("Dominio.BiometriaClienteDominio", "IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.RegistroBiometriaUnicoDominio", "RegistroBiometriaUnico")
                        .WithOne("BiometriaCliente")
                        .HasForeignKey("Dominio.BiometriaClienteDominio", "IdRegistroBiometriaUnico")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("RegistroBiometriaUnico");
                });

            modelBuilder.Entity("Dominio.ClienteDominio", b =>
                {
                    b.HasOne("Dominio.MunicipioDominio", "CidadeNatal")
                        .WithMany()
                        .HasForeignKey("IdCidadeNatal")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.EnderecoClienteDominio", "EnderecoPrincipal")
                        .WithMany()
                        .HasForeignKey("IdEnderecoPrincipal")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.EnderecoClienteDominio", "EnderecoSecundario")
                        .WithMany()
                        .HasForeignKey("IdEnderecoSecundario")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.EstadoCivilDominio", "EstadoCivil")
                        .WithMany()
                        .HasForeignKey("IdEstadoCivil")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.GeneroDominio", "Genero")
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.GrauInstrucaoDominio", "GrauInstrucao")
                        .WithMany()
                        .HasForeignKey("IdGrauInstrucao")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.LojaDominio", "Loja")
                        .WithMany("Clientes")
                        .HasForeignKey("IdLoja")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.SeguroProfissaoDominio", "Profissao")
                        .WithMany()
                        .HasForeignKey("IdProfissao")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.TelefoneClienteDominio", "TelefonePrincipal")
                        .WithMany()
                        .HasForeignKey("IdTelefonePrincipal")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.TelefoneClienteDominio", "TelefoneSecundario")
                        .WithMany()
                        .HasForeignKey("IdTelefoneSecundario")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithOne("Cliente")
                        .HasForeignKey("Dominio.ClienteDominio", "IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CidadeNatal");

                    b.Navigation("EnderecoPrincipal");

                    b.Navigation("EnderecoSecundario");

                    b.Navigation("EstadoCivil");

                    b.Navigation("Genero");

                    b.Navigation("GrauInstrucao");

                    b.Navigation("Loja");

                    b.Navigation("Profissao");

                    b.Navigation("TelefonePrincipal");

                    b.Navigation("TelefoneSecundario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.ConjugeDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithOne("Conjuge")
                        .HasForeignKey("Dominio.ConjugeDominio", "IdCliente");

                    b.HasOne("Dominio.GeneroDominio", "Genero")
                        .WithMany()
                        .HasForeignKey("IdGenero");

                    b.HasOne("Dominio.TipoRegimeCasamentoDominio", "TipoRegimeCasamento")
                        .WithMany()
                        .HasForeignKey("IdTipoRegimeCasamento");

                    b.Navigation("Cliente");

                    b.Navigation("Genero");

                    b.Navigation("TipoRegimeCasamento");
                });

            modelBuilder.Entity("Dominio.ConsultaBeneficioInssClienteDominio", b =>
                {
                    b.HasOne("Dominio.AnexoDominio", "AnexoArquivoTermo")
                        .WithMany()
                        .HasForeignKey("IdAnexoArquivoTermo")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AnexoArquivoTermo");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.ContaClienteDominio", b =>
                {
                    b.HasOne("Dominio.BancoDominio", "Banco")
                        .WithMany()
                        .HasForeignKey("IdBanco")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("Contas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.FormaRecebimentoDominio", "FormaRecebimento")
                        .WithMany()
                        .HasForeignKey("IdFormaRecebimento")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.TipoContaDominio", "TipoConta")
                        .WithMany()
                        .HasForeignKey("IdTipoConta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Cliente");

                    b.Navigation("FormaRecebimento");

                    b.Navigation("TipoConta");
                });

            modelBuilder.Entity("Dominio.ConvenioOrgaoDominio", b =>
                {
                    b.HasOne("Dominio.ConvenioDominio", "Convenio")
                        .WithMany()
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UnidadeFederativaDominio", "UF")
                        .WithMany()
                        .HasForeignKey("IdUnidadeFederativa")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Convenio");

                    b.Navigation("UF");
                });

            modelBuilder.Entity("Dominio.DocumentoIdentificacaoClienteDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("DocumentosIdentificacao")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.OrgaoEmissorIdentificacaoDominio", "OrgaoEmissor")
                        .WithMany()
                        .HasForeignKey("IdOrgaoEmissor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoDocumentoDominio", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UnidadeFederativaDominio", "Uf")
                        .WithMany()
                        .HasForeignKey("IdUnidadeFederativa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("OrgaoEmissor");

                    b.Navigation("TipoDocumento");

                    b.Navigation("Uf");
                });

            modelBuilder.Entity("Dominio.EnderecoClienteDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.MunicipioDominio", "Municipio")
                        .WithMany()
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoLogradouroDominio", "TipoLogradouro")
                        .WithMany()
                        .HasForeignKey("IdTipoLogradouro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Municipio");

                    b.Navigation("TipoLogradouro");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoContratoDominio", b =>
                {
                    b.HasOne("Dominio.IntencaoOperacaoDominio", "IntencaoOperacao")
                        .WithMany("Contratos")
                        .HasForeignKey("IdIntencaoOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IntencaoOperacao");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoDominio", b =>
                {
                    b.HasOne("Dominio.LeadDominio", "Lead")
                        .WithMany("IntencoesOperacao")
                        .HasForeignKey("IdLead")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.LojaDominio", "Loja")
                        .WithMany("IntencoesOperacao")
                        .HasForeignKey("IdLoja")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.ProdutoDominio", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.RendimentoClienteDominio", "RendimentoCliente")
                        .WithMany("IntencoesOperacao")
                        .HasForeignKey("IdRendimentoCliente")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.TipoOperacaoDominio", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("IdTipoOperacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany("IntencoesOperacao")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Lead");

                    b.Navigation("Loja");

                    b.Navigation("Produto");

                    b.Navigation("RendimentoCliente");

                    b.Navigation("TipoOperacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoHistoricoDominio", b =>
                {
                    b.HasOne("Dominio.IntencaoOperacaoDominio", "IntencaoOperacao")
                        .WithMany("Historico")
                        .HasForeignKey("IdIntencaoOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.IntencaoOperacaoSituacaoDominio", "SituacaoIntencaoOperacao")
                        .WithMany()
                        .HasForeignKey("IdIntencaoOperacaoSituacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IntencaoOperacao");

                    b.Navigation("SituacaoIntencaoOperacao");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoObservacaoDominio", b =>
                {
                    b.HasOne("Dominio.IntencaoOperacaoDominio", "IntencaoOperacao")
                        .WithMany("Observacoes")
                        .HasForeignKey("IdIntencaoOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IntencaoOperacao");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoPortabilidadeDominio", b =>
                {
                    b.HasOne("Dominio.BancoDominio", "BancoOriginador")
                        .WithMany()
                        .HasForeignKey("IdBancoOriginador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.IntencaoOperacaoDominio", "IntencaoOperacao")
                        .WithOne("Portabilidade")
                        .HasForeignKey("Dominio.IntencaoOperacaoPortabilidadeDominio", "IdIntencaoOperacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BancoOriginador");

                    b.Navigation("IntencaoOperacao");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoSituacaoPassoDominio", b =>
                {
                    b.HasOne("Dominio.IntencaoOperacaoSituacaoDominio", "SituacaoIntencaoOperacao")
                        .WithMany()
                        .HasForeignKey("IdIntencaoOperacaoSituacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.ProdutoDominio", "Produto")
                        .WithMany("PassosIntencaoOperacao")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.IntencaoOperacaoSituacaoPassoDominio", "ProximoPasso")
                        .WithMany()
                        .HasForeignKey("IdProximoPasso")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.IntencaoOperacaoSituacaoPassoDominio", "ProximoPassoExcecao")
                        .WithMany()
                        .HasForeignKey("IdProximoPassoExcecao")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.TipoOperacaoDominio", "TipoOperacao")
                        .WithMany("PassosIntencaoOperacao")
                        .HasForeignKey("IdTipoOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("ProximoPasso");

                    b.Navigation("ProximoPassoExcecao");

                    b.Navigation("SituacaoIntencaoOperacao");

                    b.Navigation("TipoOperacao");
                });

            modelBuilder.Entity("Dominio.LeadCorrespondenteDominio", b =>
                {
                    b.HasOne("Dominio.MunicipioDominio", "Municipio")
                        .WithMany()
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Dominio.LeadDominio", b =>
                {
                    b.HasOne("Dominio.ConvenioDominio", "Convenio")
                        .WithMany()
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.LojaDominio", "Loja")
                        .WithMany("Leads")
                        .HasForeignKey("IdLoja")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.ProdutoDominio", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Convenio");

                    b.Navigation("Loja");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Dominio.LojaDominio", b =>
                {
                    b.HasOne("Dominio.MunicipioDominio", "Municipio")
                        .WithMany()
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoLogradouroDominio", "TipoLogradouro")
                        .WithMany()
                        .HasForeignKey("IdTipoLogradouro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Municipio");

                    b.Navigation("TipoLogradouro");
                });

            modelBuilder.Entity("Dominio.MunicipioDominio", b =>
                {
                    b.HasOne("Dominio.UnidadeFederativaDominio", "UF")
                        .WithMany()
                        .HasForeignKey("IdUnidadeFederativa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UF");
                });

            modelBuilder.Entity("Dominio.NotificacaoDominio", b =>
                {
                    b.HasOne("Dominio.NotificacaoFinalidadeDominio", "Finalidade")
                        .WithMany()
                        .HasForeignKey("IdNotificacaoFinalidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.NotificacaoSeveridadeDominio", "Severidade")
                        .WithMany()
                        .HasForeignKey("IdNotificacaoSeveridade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.NotificacaoTemplateDominio", "Template")
                        .WithMany()
                        .HasForeignKey("IdTemplateNotificacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Finalidade");

                    b.Navigation("Severidade");

                    b.Navigation("Template");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.NotificacaoTemplateDominio", b =>
                {
                    b.HasOne("Dominio.NotificacaoFinalidadeDominio", "Finalidade")
                        .WithMany()
                        .HasForeignKey("IdNotificacaoFinalidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.NotificacaoSeveridadeDominio", "Severidade")
                        .WithMany()
                        .HasForeignKey("IdNotificacaoSeveridade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Finalidade");

                    b.Navigation("Severidade");
                });

            modelBuilder.Entity("Dominio.ParametroOperacaoDominio", b =>
                {
                    b.HasOne("Dominio.ConvenioDominio", "Convenio")
                        .WithMany()
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoOperacaoDominio", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("IdTipoOperacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Convenio");

                    b.Navigation("TipoOperacao");
                });

            modelBuilder.Entity("Dominio.RegistroBiometriaUnicoDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.RegistroClubeBeneficiosDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithOne()
                        .HasForeignKey("Dominio.RegistroClubeBeneficiosDominio", "IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.RegistroEmailDominio", b =>
                {
                    b.HasOne("Dominio.TemplateEmailFinalidadeDominio", "TemplateEmailFinalidade")
                        .WithMany()
                        .HasForeignKey("IdFinalidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("TemplateEmailFinalidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.RegistroSmsDominio", b =>
                {
                    b.HasOne("Dominio.TemplateSmsDominio", "TemplateSMS")
                        .WithMany()
                        .HasForeignKey("IdTemplateSms")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("TemplateSMS");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.RegistroTorpedoVozDominio", b =>
                {
                    b.HasOne("Dominio.TemplateTorpedoVozDominio", "TemplateTorpedoVoz")
                        .WithMany()
                        .HasForeignKey("IdTemplateTorpedoVoz")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("TemplateTorpedoVoz");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.RegistroWhatsappDominio", b =>
                {
                    b.HasOne("Dominio.TemplateWhatsappDominio", "TemplateWhatsapp")
                        .WithMany()
                        .HasForeignKey("IdTemplateWhatsapp")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("TemplateWhatsapp");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("Rendimentos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.ContaClienteDominio", "ContaCliente")
                        .WithMany("Rendimentos")
                        .HasForeignKey("IdContaCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.ContaClienteDominio", "ContaClienteRecebimento")
                        .WithMany("RendimentosRecebimento")
                        .HasForeignKey("IdContaClienteRecebimento")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.ConvenioDominio", "Convenio")
                        .WithMany()
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.ConvenioOrgaoDominio", "ConvenioOrgao")
                        .WithMany()
                        .HasForeignKey("IdConvenioOrgao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UnidadeFederativaDominio", "Uf")
                        .WithMany()
                        .HasForeignKey("IdUf")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("ContaCliente");

                    b.Navigation("ContaClienteRecebimento");

                    b.Navigation("Convenio");

                    b.Navigation("ConvenioOrgao");

                    b.Navigation("Uf");
                });

            modelBuilder.Entity("Dominio.SeguroBeneficiarioDominio", b =>
                {
                    b.HasOne("Dominio.SeguroClienteIcatuDominio", "SeguroCliente")
                        .WithMany()
                        .HasForeignKey("IdSeguroCliente");

                    b.HasOne("Dominio.SeguroParentescoDominio", "SeguroParentesco")
                        .WithMany()
                        .HasForeignKey("IdSeguroParentesco");

                    b.HasOne("Dominio.SeguroPropostaDominio", "SeguroProposta")
                        .WithMany()
                        .HasForeignKey("IdSeguroProposta");

                    b.Navigation("SeguroCliente");

                    b.Navigation("SeguroParentesco");

                    b.Navigation("SeguroProposta");
                });

            modelBuilder.Entity("Dominio.SeguroBeneficiarioIcatuDominio", b =>
                {
                    b.HasOne("Dominio.SeguroClienteIcatuDominio", "SeguroClienteIcatu")
                        .WithMany()
                        .HasForeignKey("IdSeguroClienteIcatu");

                    b.HasOne("Dominio.SeguroParentescoIcatuDominio", "SeguroParentescoIcatu")
                        .WithMany()
                        .HasForeignKey("IdSeguroParentescoIcatu");

                    b.HasOne("Dominio.SeguroPropostaIcatuDominio", "SeguroPropostaIcatu")
                        .WithMany()
                        .HasForeignKey("IdSeguroProposta");

                    b.Navigation("SeguroClienteIcatu");

                    b.Navigation("SeguroParentescoIcatu");

                    b.Navigation("SeguroPropostaIcatu");
                });

            modelBuilder.Entity("Dominio.SeguroClienteIcatuDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithOne()
                        .HasForeignKey("Dominio.SeguroClienteIcatuDominio", "IdCliente");

                    b.HasOne("Dominio.SeguroEnderecoClienteDominio", "EnderecoCobranca")
                        .WithMany()
                        .HasForeignKey("IdEnderecoCobranca");

                    b.HasOne("Dominio.SeguroEnderecoClienteDominio", "EnderecoPrincipal")
                        .WithMany()
                        .HasForeignKey("IdEnderecoPrincipal");

                    b.HasOne("Dominio.EstadoCivilDominio", "EstadoCivil")
                        .WithMany()
                        .HasForeignKey("IdEstadoCivil");

                    b.HasOne("Dominio.GeneroDominio", "Genero")
                        .WithMany()
                        .HasForeignKey("IdGenero");

                    b.HasOne("Dominio.SeguroProfissaoIcatuDominio", "SeguroProfissaoIcatu")
                        .WithMany()
                        .HasForeignKey("IdProfissaoIcatu");

                    b.Navigation("Cliente");

                    b.Navigation("EnderecoCobranca");

                    b.Navigation("EnderecoPrincipal");

                    b.Navigation("EstadoCivil");

                    b.Navigation("Genero");

                    b.Navigation("SeguroProfissaoIcatu");
                });

            modelBuilder.Entity("Dominio.SeguroClienteTelefoneDominio", b =>
                {
                    b.HasOne("Dominio.SeguroClienteIcatuDominio", "Cliente")
                        .WithMany("Telefones")
                        .HasForeignKey("IdCliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.SeguroCoberturaDominio", b =>
                {
                    b.HasOne("Dominio.SeguroProdutoDominio", "SeguroProduto")
                        .WithMany()
                        .HasForeignKey("IdSeguroProduto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SeguroProduto");
                });

            modelBuilder.Entity("Dominio.SeguroCoberturaIcatuDominio", b =>
                {
                    b.HasOne("Dominio.SeguroProdutoIcatuDominio", "SeguroProdutoIcatu")
                        .WithMany()
                        .HasForeignKey("IdSeguroProdutoIcatu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SeguroProdutoIcatu");
                });

            modelBuilder.Entity("Dominio.SeguroCobrancaPropostaCartaoIcatuDominio", b =>
                {
                    b.HasOne("Dominio.SeguroCobrancaPropostaIcatuDominio", "SeguroCobrancaPropostaIcatu")
                        .WithOne()
                        .HasForeignKey("Dominio.SeguroCobrancaPropostaCartaoIcatuDominio", "IdSeguroCobrancaPropostaIcatu");

                    b.Navigation("SeguroCobrancaPropostaIcatu");
                });

            modelBuilder.Entity("Dominio.SeguroCobrancaPropostaIcatuDominio", b =>
                {
                    b.HasOne("Dominio.SeguroPropostaIcatuDominio", "SeguroPropostaIcatu")
                        .WithMany()
                        .HasForeignKey("IdSeguroPropostaIcatu");

                    b.Navigation("SeguroPropostaIcatu");
                });

            modelBuilder.Entity("Dominio.SeguroEnderecoClienteDominio", b =>
                {
                    b.HasOne("Dominio.MunicipioDominio", "Municipio")
                        .WithMany()
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Dominio.SeguroParentescoIcatuDominio", b =>
                {
                    b.HasOne("Dominio.SeguroParentescoDominio", "SeguroParentescoBem")
                        .WithOne()
                        .HasForeignKey("Dominio.SeguroParentescoIcatuDominio", "IdSeguroParentescoBem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SeguroParentescoBem");
                });

            modelBuilder.Entity("Dominio.SeguroProdutoDominio", b =>
                {
                    b.HasOne("Dominio.ProdutoDominio", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Dominio.SeguroProdutoIcatuDominio", b =>
                {
                    b.HasOne("Dominio.SeguroProdutoDominio", "SeguroProduto")
                        .WithMany()
                        .HasForeignKey("IdSeguroProduto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SeguroProduto");
                });

            modelBuilder.Entity("Dominio.SeguroProfissaoIcatuDominio", b =>
                {
                    b.HasOne("Dominio.SeguroProfissaoDominio", "SeguroProfissaoBem")
                        .WithOne()
                        .HasForeignKey("Dominio.SeguroProfissaoIcatuDominio", "IdSeguroProfissaoBem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SeguroProfissaoBem");
                });

            modelBuilder.Entity("Dominio.SeguroPropostaDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithOne("SeguroProposta")
                        .HasForeignKey("Dominio.SeguroPropostaDominio", "IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.SeguroProdutoDominio", "Produto")
                        .WithMany()
                        .HasForeignKey("IdSeguroProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Dominio.SeguroPropostaIcatuDominio", b =>
                {
                    b.HasOne("Dominio.SeguroClienteIcatuDominio", "SeguroClienteIcatu")
                        .WithMany()
                        .HasForeignKey("IdSeguroClienteIcatu");

                    b.HasOne("Dominio.SeguroPropostaDominio", "SeguroProposta")
                        .WithOne()
                        .HasForeignKey("Dominio.SeguroPropostaIcatuDominio", "IdSeguroProposta");

                    b.Navigation("SeguroClienteIcatu");

                    b.Navigation("SeguroProposta");
                });

            modelBuilder.Entity("Dominio.SeguroSituacaoIcatuDominio", b =>
                {
                    b.HasOne("Dominio.SeguroPropostaIcatuDominio", "SeguroPropostaIcatu")
                        .WithMany()
                        .HasForeignKey("IdSeguroPropostaIcatu");

                    b.Navigation("SeguroPropostaIcatu");
                });

            modelBuilder.Entity("Dominio.SolicitacaoDocumentoDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.TipoDocumentoDominio", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("Dominio.TelefoneClienteDominio", b =>
                {
                    b.HasOne("Dominio.ClienteDominio", "Cliente")
                        .WithMany("Telefones")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.TelefoneClienteSolicitacaoConfirmacaoDominio", b =>
                {
                    b.HasOne("Dominio.TelefoneClienteDominio", "TelefoneCliente")
                        .WithMany()
                        .HasForeignKey("IdTelefoneCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TipoSolicitacaoConfirmacaoDominio", "TipoSolicitacaoConfirmacao")
                        .WithMany()
                        .HasForeignKey("IdTipoSolicitacaoConfirmacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TelefoneCliente");

                    b.Navigation("TipoSolicitacaoConfirmacao");
                });

            modelBuilder.Entity("Dominio.TelefoneLojaDominio", b =>
                {
                    b.HasOne("Dominio.LojaDominio", "Loja")
                        .WithMany("Telefones")
                        .HasForeignKey("IdLoja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("Dominio.TemplateEmailDominio", b =>
                {
                    b.HasOne("Dominio.TemplateEmailFinalidadeDominio", "TemplateEmailFinalidade")
                        .WithMany()
                        .HasForeignKey("IdFinalidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.TemplateEmailTipoDominio", "TemplateEmailTipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TemplateEmailFinalidade");

                    b.Navigation("TemplateEmailTipo");
                });

            modelBuilder.Entity("Dominio.TermoDominio", b =>
                {
                    b.HasOne("Dominio.TipoTermoDominio", "TipoTermo")
                        .WithMany()
                        .HasForeignKey("IdTipoTermo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TipoTermo");
                });

            modelBuilder.Entity("Dominio.TipoRegimeCasamentoBemDominio", b =>
                {
                    b.HasOne("Dominio.TipoRegimeCasamentoDominio", "TipoRegimeCasamento")
                        .WithMany()
                        .HasForeignKey("IdTipoRegimeCasamento");

                    b.Navigation("TipoRegimeCasamento");
                });

            modelBuilder.Entity("Dominio.UsuarioConfirmacaoEmailDominio", b =>
                {
                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.UsuarioRecuperacaoSenhaDominio", b =>
                {
                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.UsuarioRedeSocialDominio", b =>
                {
                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany("UsuariosRedesSociais")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.UsuarioRequisicaoLogDominio", b =>
                {
                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.UsuarioTermoDominio", b =>
                {
                    b.HasOne("Dominio.TermoDominio", "Termo")
                        .WithMany("UsuariosTermos")
                        .HasForeignKey("IdTermo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.UsuarioDominio", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Termo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteAeronauticaDominio", b =>
                {
                    b.HasOne("Dominio.RendimentoClienteDominio", null)
                        .WithOne()
                        .HasForeignKey("Dominio.RendimentoClienteAeronauticaDominio", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.AeronauticaCargoDominio", "Cargo")
                        .WithMany()
                        .HasForeignKey("IdAeronauticaCargo")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.AeronauticaTipoFuncionalDominio", "TipoFuncional")
                        .WithMany()
                        .HasForeignKey("IdAeronauticaTipoFuncional")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("TipoFuncional");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteInssDominio", b =>
                {
                    b.HasOne("Dominio.RendimentoClienteDominio", null)
                        .WithOne()
                        .HasForeignKey("Dominio.RendimentoClienteInssDominio", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.InssEspecieBeneficioDominio", "EspecieBeneficio")
                        .WithMany()
                        .HasForeignKey("IdInssEspecieBeneficio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EspecieBeneficio");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteMarinhaDominio", b =>
                {
                    b.HasOne("Dominio.RendimentoClienteDominio", null)
                        .WithOne()
                        .HasForeignKey("Dominio.RendimentoClienteMarinhaDominio", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.MarinhaCargoDominio", "Cargo")
                        .WithMany()
                        .HasForeignKey("IdMarinhaCargo")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.MarinhaTipoFuncionalDominio", "TipoFuncional")
                        .WithMany()
                        .HasForeignKey("IdMarinhaTipoFuncional")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("TipoFuncional");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteSiapeDominio", b =>
                {
                    b.HasOne("Dominio.RendimentoClienteDominio", null)
                        .WithOne()
                        .HasForeignKey("Dominio.RendimentoClienteSiapeDominio", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.SiapeTipoFuncionalDominio", "TipoFuncional")
                        .WithMany()
                        .HasForeignKey("IdSiapeTipoFuncional")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TipoFuncional");
                });

            modelBuilder.Entity("Dominio.ClienteDominio", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("BiometriaCliente");

                    b.Navigation("Conjuge");

                    b.Navigation("Contas");

                    b.Navigation("DocumentosIdentificacao");

                    b.Navigation("Enderecos");

                    b.Navigation("Rendimentos");

                    b.Navigation("SeguroProposta");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("Dominio.ContaClienteDominio", b =>
                {
                    b.Navigation("Rendimentos");

                    b.Navigation("RendimentosRecebimento");
                });

            modelBuilder.Entity("Dominio.IntencaoOperacaoDominio", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("Historico");

                    b.Navigation("Observacoes");

                    b.Navigation("Portabilidade");
                });

            modelBuilder.Entity("Dominio.LeadDominio", b =>
                {
                    b.Navigation("IntencoesOperacao");
                });

            modelBuilder.Entity("Dominio.LojaDominio", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("IntencoesOperacao");

                    b.Navigation("Leads");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("Dominio.ProdutoDominio", b =>
                {
                    b.Navigation("PassosIntencaoOperacao");
                });

            modelBuilder.Entity("Dominio.RegistroBiometriaUnicoDominio", b =>
                {
                    b.Navigation("BiometriaCliente");
                });

            modelBuilder.Entity("Dominio.RendimentoClienteDominio", b =>
                {
                    b.Navigation("IntencoesOperacao");
                });

            modelBuilder.Entity("Dominio.SeguroClienteIcatuDominio", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("Dominio.TermoDominio", b =>
                {
                    b.Navigation("UsuariosTermos");
                });

            modelBuilder.Entity("Dominio.TipoOperacaoDominio", b =>
                {
                    b.Navigation("PassosIntencaoOperacao");
                });

            modelBuilder.Entity("Dominio.UsuarioDominio", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("IntencoesOperacao");

                    b.Navigation("UsuariosRedesSociais");
                });
#pragma warning restore 612, 618
        }
    }
}
