// <auto-generated />
using System;
using Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraestrutura.Migrations
{
    [DbContext(typeof(PlataformaClienteContexto))]
    [Migration("20220203122558_AddNovasComunicacoes")]
    partial class AddNovasComunicacoes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Entidades.EmailFornecedorDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_EMAIL_FORNECEDOR")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("HOST");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<string>("NomeExibicao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOME_EXIBICAO");

                    b.Property<int>("Porta")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("PORTA");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SENHA");

                    b.Property<bool>("Ssl")
                        .HasColumnType("bit")
                        .HasColumnName("SSL");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUARIO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("EMAIL_FORNECEDOR");
                });

            modelBuilder.Entity("Dominio.Entidades.EmailMensagemDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_EMAIL_MENSAGEM")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ASSUNTO");

                    b.Property<string>("CodigoReferenciaEmail")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("CODIGO_REFERENCIA_EMAIL");

                    b.Property<string>("Copia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COPIA");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime?>("DataEnvio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ENVIO");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INSERCAO");

                    b.Property<DateTime?>("DataRecebimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_RECEBIMENTO");

                    b.Property<string>("Destinatario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESTINATARIO");

                    b.Property<int>("IdEmailFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMAIL_FORNECEDOR");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MENSAGEM");

                    b.Property<bool>("Prioritario")
                        .HasColumnType("bit")
                        .HasColumnName("PRIORITARIO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdEmailFornecedor");

                    b.ToTable("EMAIL_MENSAGEM");
                });

            modelBuilder.Entity("Dominio.Entidades.EmpresaDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOME");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("EMPRESA");
                });

            modelBuilder.Entity("Dominio.Entidades.SituacaoEnvioDetalhesDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_SITUACAO_ENVIO_DETALHES");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("SITUACAO_ENVIO_DETALHES");
                });

            modelBuilder.Entity("Dominio.Entidades.SituacaoEnvioDominio", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_SITUACAO_ENVIO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.ToTable("SITUACAO_ENVIO");
                });

            modelBuilder.Entity("Dominio.Entidades.SmsFornecedorDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SMS_FORNECEDOR")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoAgrupador")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_AGRUPADOR");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<string>("NomeExibicao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOME_EXIBICAO");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SENHA");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUARIO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("SMS_FORNECEDOR");
                });

            modelBuilder.Entity("Dominio.Entidades.SmsMensagemDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SMS_MENSAGEM")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoReferenciaMensagem")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("CODIGO_REFERENCIA_MENSAGEM");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime?>("DataEnvio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ENVIO");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INSERCAO");

                    b.Property<DateTime?>("DataRecebimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_RECEBIMENTO");

                    b.Property<int?>("IdSituacaoEnvio")
                        .HasColumnType("int")
                        .HasColumnName("ID_SITUACAO_ENVIO");

                    b.Property<int?>("IdSituacaoEnvioDetalhes")
                        .HasColumnType("int")
                        .HasColumnName("ID_SITUACAO_ENVIO_DETALHES");

                    b.Property<int>("IdSmsFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("ID_SMS_FORNECEDOR");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MENSAGEM");

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("NUMERO_TELEFONE");

                    b.Property<string>("Operadora")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("OPERADORA");

                    b.Property<bool>("Processado")
                        .HasColumnType("bit")
                        .HasColumnName("PROCESSADO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdSituacaoEnvio");

                    b.HasIndex("IdSituacaoEnvioDetalhes");

                    b.HasIndex("IdSmsFornecedor");

                    b.ToTable("SMS_MENSAGEM");
                });

            modelBuilder.Entity("Dominio.Entidades.TorpedoVozFornecedorDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TORPEDO_VOZ_FORNECEDOR")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChaveEnvio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CHAVE_ENVIO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<string>("NomeExibicao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NOME_EXIBICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("TORPEDO_VOZ_FORNECEDOR");
                });

            modelBuilder.Entity("Dominio.Entidades.TorpedoVozMensagemDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TORPEDO_VOZ_MENSAGEM")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoReferenciaMensagem")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("CODIGO_REFERENCIA_MENSAGEM");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INSERCAO");

                    b.Property<int>("IdTorpedoVozFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("ID_TORPEDO_VOZ_FORNECEDOR");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("MENSAGEM");

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("NUMERO_TELEFONE");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit")
                        .HasColumnName("SITUACAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdTorpedoVozFornecedor");

                    b.ToTable("TORPEDO_VOZ_MENSAGEM");
                });

            modelBuilder.Entity("Dominio.Entidades.WhatsappFornecedorDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_WHATSAPP_FORNECEDOR")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CHAVE");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<string>("NomeExibicao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOME_EXIBICAO");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("WHATSAPP_FORNECEDOR");
                });

            modelBuilder.Entity("Dominio.Entidades.WhatsappMensagemDominio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_WHATSAPP_MENSAGEM")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoReferenciaMensagem")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("CODIGO_REFERENCIA_MENSAGEM");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<Guid>("IdTemplate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_TEMPLATE");

                    b.Property<int>("IdWhatsappFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("ID_WHATSAPP_FORNECEDOR");

                    b.Property<string>("MensagemEnvio")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("MENSAGEM_ENVIO");

                    b.Property<string>("MensagemRetornoErro")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("MENSAGEM_RETORNO_ERRO");

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NUMERO_TELEFONE");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("USUARIO_ATUALIZACAO");

                    b.HasKey("ID");

                    b.HasIndex("IdWhatsappFornecedor");

                    b.ToTable("WHATSAPP_MENSAGEM");
                });

            modelBuilder.Entity("Dominio.Entidades.EmailFornecedorDominio", b =>
                {
                    b.HasOne("Dominio.Entidades.EmpresaDominio", "Empresa")
                        .WithMany("EmailFornecedores")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Dominio.Entidades.EmailMensagemDominio", b =>
                {
                    b.HasOne("Dominio.Entidades.EmailFornecedorDominio", "EmailFornecedor")
                        .WithMany("EmailMensagens")
                        .HasForeignKey("IdEmailFornecedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EmailFornecedor");
                });

            modelBuilder.Entity("Dominio.Entidades.SmsFornecedorDominio", b =>
                {
                    b.HasOne("Dominio.Entidades.EmpresaDominio", "Empresa")
                        .WithMany("SmsFornecedores")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Dominio.Entidades.SmsMensagemDominio", b =>
                {
                    b.HasOne("Dominio.Entidades.SituacaoEnvioDominio", "SituacaoEnvio")
                        .WithMany("SmsMensagens")
                        .HasForeignKey("IdSituacaoEnvio")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.Entidades.SituacaoEnvioDetalhesDominio", "SituacaoEnvioDetalhes")
                        .WithMany("SmsMensagens")
                        .HasForeignKey("IdSituacaoEnvioDetalhes")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.Entidades.SmsFornecedorDominio", "SmsFornecedor")
                        .WithMany("SmsMensagens")
                        .HasForeignKey("IdSmsFornecedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SituacaoEnvio");

                    b.Navigation("SituacaoEnvioDetalhes");

                    b.Navigation("SmsFornecedor");
                });

            modelBuilder.Entity("Dominio.Entidades.TorpedoVozFornecedorDominio", b =>
                {
                    b.HasOne("Dominio.Entidades.EmpresaDominio", "Empresa")
                        .WithMany("TorpedoVozFornecedores")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Dominio.Entidades.TorpedoVozMensagemDominio", b =>
                {
                    b.HasOne("Dominio.Entidades.TorpedoVozFornecedorDominio", "TorpedoVozFornecedor")
                        .WithMany("TorpedoVozMensagens")
                        .HasForeignKey("IdTorpedoVozFornecedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TorpedoVozFornecedor");
                });

            modelBuilder.Entity("Dominio.Entidades.WhatsappFornecedorDominio", b =>
                {
                    b.HasOne("Dominio.Entidades.EmpresaDominio", "Empresa")
                        .WithMany("WhatsappFornecedores")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Dominio.Entidades.WhatsappMensagemDominio", b =>
                {
                    b.HasOne("Dominio.Entidades.WhatsappFornecedorDominio", "WhatsappFornecedor")
                        .WithMany("WhatsappMensagens")
                        .HasForeignKey("IdWhatsappFornecedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WhatsappFornecedor");
                });

            modelBuilder.Entity("Dominio.Entidades.EmailFornecedorDominio", b =>
                {
                    b.Navigation("EmailMensagens");
                });

            modelBuilder.Entity("Dominio.Entidades.EmpresaDominio", b =>
                {
                    b.Navigation("EmailFornecedores");

                    b.Navigation("SmsFornecedores");

                    b.Navigation("TorpedoVozFornecedores");

                    b.Navigation("WhatsappFornecedores");
                });

            modelBuilder.Entity("Dominio.Entidades.SituacaoEnvioDetalhesDominio", b =>
                {
                    b.Navigation("SmsMensagens");
                });

            modelBuilder.Entity("Dominio.Entidades.SituacaoEnvioDominio", b =>
                {
                    b.Navigation("SmsMensagens");
                });

            modelBuilder.Entity("Dominio.Entidades.SmsFornecedorDominio", b =>
                {
                    b.Navigation("SmsMensagens");
                });

            modelBuilder.Entity("Dominio.Entidades.TorpedoVozFornecedorDominio", b =>
                {
                    b.Navigation("TorpedoVozMensagens");
                });

            modelBuilder.Entity("Dominio.Entidades.WhatsappFornecedorDominio", b =>
                {
                    b.Navigation("WhatsappMensagens");
                });
#pragma warning restore 612, 618
        }
    }
}
